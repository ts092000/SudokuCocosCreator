{"version":3,"sources":["file:///D:/gameCocos/SudokuMain2/assets/Script/GameController.ts"],"names":["runScene","arg0","Error","loadScene","_decorator","Component","Node","VerticalTextAlignment","Label","Vec3","Color","Sprite","Button","director","AudioClip","SudokuCreator","ccclass","property","GameController","selectedNode","puzzleGame","solutionGame","redNumber","difficultyLevel","onLoad","levelPanel","active","console","log","rePlayGame","displayLevelPanel","easyLevelGame","createPuzzleBoard","bgNodeValue","node","mediumLevelGame","hardLevelGame","beginGame","sudokuCreator","childMatrixWidth","boardData","createSudoku","i","puzzle","length","push","solution","value","j","nodeSudoku","setPosition","boardNode","addChild","labelBlock","addComponent","string","toString","on","EventType","TOUCH_END","nodeNum","label","verticalAlign","CENTER","parent","position","Math","floor","numberLabels","selectedValue","parseInt","isNaN","volumeSelectNode","play","x","y","solutionValue","isCorrect","getComponent","color","RED","playerFault","gameOver","volumeLose","BLUE"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, VerticalTextAlignment, Label, Vec3, Color, Sprite, Button, director, AudioClip, AudioSource } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\nimport { GameView } from './GameView';\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n\r\n    @property(Node)\r\n    boardNode: Node;\r\n\r\n    @property(Label)\r\n    numberLabels: Label[] = [];\r\n\r\n    @property(Node)\r\n    gameOver: Node;\r\n\r\n    @property(Node)\r\n    levelPanel: Node;\r\n\r\n    @property(Button)\r\n    rePlay: Button;\r\n\r\n    //LevelPanel\r\n    @property(Button)\r\n    easyLevel: Button;\r\n\r\n    @property(Button)\r\n    mediumLevel: Button;\r\n\r\n    @property(Button)\r\n    hardLevel: Button;\r\n\r\n    @property(Label)\r\n    playerFault: Label;\r\n\r\n    @property(Sprite)\r\n    bgNodeValue: Sprite;\r\n    \r\n    //Audio Game\r\n    @property(AudioClip)\r\n    volumeSelectNode: AudioClip;\r\n\r\n    @property(AudioClip)\r\n    volumeLose: AudioClip;\r\n\r\n    selectedNode: Node = null;\r\n    puzzleGame: number[] = [];\r\n    solutionGame: number[] = [];\r\n    redNumber: number = 0;\r\n    difficultyLevel: number;    \r\n    onLoad() {\r\n        this.levelPanel.active = true;\r\n        //this.createPuzzleBoard();\r\n        console.log(this.puzzleGame)\r\n        console.log(this.solutionGame)\r\n    }\r\n    rePlayGame(){\r\n        director.loadScene(\"MainGame\");\r\n    }\r\n    displayLevelPanel(){\r\n        this.levelPanel.active = true;\r\n    }\r\n    \r\n    //levelFunction\r\n    easyLevelGame() {\r\n        this.difficultyLevel = 0.1;\r\n        this.createPuzzleBoard();\r\n        this.levelPanel.active = false;\r\n        this.bgNodeValue.node.active = true;\r\n    }\r\n    mediumLevelGame() {\r\n        this.difficultyLevel = 0.2;\r\n        this.createPuzzleBoard();\r\n        this.levelPanel.active = false;\r\n        this.bgNodeValue.node.active = true;\r\n\r\n    }\r\n    hardLevelGame() {\r\n        this.difficultyLevel = 0.3;\r\n        this.createPuzzleBoard();\r\n        this.levelPanel.active = false;\r\n        this.bgNodeValue.node.active = true;\r\n\r\n    }\r\n    beginGame(){\r\n        director.loadScene(\"MainGame\");\r\n    }\r\n    createPuzzleBoard(){\r\n        //this.playerFault.color = Color.RED;\r\n\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(this.difficultyLevel);\r\n\r\n        for (let i = 0; i < boardData.puzzle.length; i++) {\r\n            this.puzzleGame.push(boardData.puzzle[i] + 1);\r\n        }\r\n        for (let i = 0; i < boardData.solution.length; i++) {\r\n            this.solutionGame.push(boardData.solution[i] + 1);\r\n        }\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            for (let j = 0; j < 9; j++) {\r\n                const value = this.puzzleGame[i*9 + j];\r\n                const nodeSudoku = new Node(\"ValueGame\");\r\n\r\n                nodeSudoku.setPosition(i * 55, j * 55);\r\n                this.boardNode.addChild(nodeSudoku);\r\n                \r\n                const labelBlock = nodeSudoku.addComponent(Label);\r\n                labelBlock.string = value === 0 ? \"    \" : value.toString();\r\n\r\n                nodeSudoku.on(Node.EventType.TOUCH_END, () => {\r\n                    this.selectedNode = nodeSudoku;\r\n                    // labelBlock.string = \"-\";\r\n                });\r\n\r\n            }\r\n            const nodeNum = new Node(\"NumberValueLabel\");\r\n            const label = nodeNum.addComponent(Label);\r\n            label.string = ` ${i + 1} `;\r\n            label.verticalAlign = VerticalTextAlignment.CENTER;\r\n            nodeNum.parent = this.node;\r\n            nodeNum.position = new Vec3(i % 3 * 100 + 180, Math.floor(i / 3) * -60, 0);\r\n            this.numberLabels.push(label);\r\n            nodeNum.on(Node.EventType.TOUCH_END, () => {\r\n                if (this.selectedNode) {\r\n                    const selectedValue = parseInt(label.string);\r\n                    if (!isNaN(selectedValue)) {\r\n                        this.volumeSelectNode.play();\r\n                        const i = Math.floor(this.selectedNode.position.x / 55);\r\n                        const j = Math.floor(this.selectedNode.position.y / 55);\r\n                        const position = i * 9 + j;\r\n                        const solutionValue = this.solutionGame[position];\r\n                        const isCorrect = selectedValue === solutionValue;\r\n                        console.log(isCorrect);\r\n\r\n                        const labelBlock = this.selectedNode.getComponent(Label);\r\n                        if (!isCorrect) {\r\n                            labelBlock.color = Color.RED;\r\n                            this.redNumber++;\r\n                            this.playerFault.string = `Lỗi: ${this.redNumber}/3`\r\n                            this.playerFault.node.active = true;\r\n                            if (this.redNumber === 4) {\r\n                                console.log(\"thua rồi nhé !!!\");\r\n                                this.gameOver.active = true;\r\n                                this.playerFault.string = `Lỗi 3/3`;\r\n                                this.volumeLose.play();                       }\r\n                        } else {\r\n                            labelBlock.color = Color.BLUE;\r\n                        }\r\n                        labelBlock.string = selectedValue.toString();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n    }   \r\n}\r\n\r\n\r\nexport function runScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\nexport function loadScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n"]}