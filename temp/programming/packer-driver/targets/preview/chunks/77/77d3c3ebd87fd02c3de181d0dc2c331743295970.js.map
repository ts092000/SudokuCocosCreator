{"version":3,"sources":["file:///C:/Users/ADMIN/OneDrive/M%C3%A1y%20t%C3%ADnh/SudokuMain2/SudokuMain2/assets/Script/GameController.ts"],"names":["runScene","arg0","Error","loadScene","_decorator","Component","Node","VerticalTextAlignment","Label","Vec3","Color","Button","director","Prefab","instantiate","find","SudokuCreator","GameView","StoredPersistNode","ccclass","property","GameController","type","selectedNode","puzzleGame","solutionGame","redNumber","difficultyLevel","timeElapsed","timeBestArr","timeBestArr1","timeBestArr2","volumeBg","volumeEffect","nodePositionArray","frameNodeNumArray","frameNodePositionArray","frameNodeArray","frameNodeArrayLength","volumeSudokuArray","gameClient","matchId","currentPos","start","_this","parameters","gameClientParams","getComponent","match","startMatch","then","data","catch","error","console","log","bestscore","localStorage","getItem","JSON","parse","gameView","BestTime","string","Math","min","bestscore1","bestscore2","volumeValue","length","AudioBg","volume","SelectNode","WinAudio","LoseAudio","AudioMute","node","active","AudioUnmute","onLoad","LevelPanel","BgBoardNode","updateTimer","TimeLabel","rePlayGame","displayLevelPanel","update","BestTimeLevel","on","EventType","CLICK","btnMute","btnUnmute","easyLevelGame","createPuzzleBoard","bgNodeValue","schedule","LevelLabel","NewGameBtn","PlayerFault","mediumLevelGame","hardLevelGame","sudokuCreator","childMatrixWidth","boardData","createSudoku","i","puzzle","push","solution","emtyNode","nodeCheck","filled","value","j","nodeSudoku","setPosition","BoardNode","addChild","labelBlock","addComponent","toString","color","BLACK","nodeState","TOUCH_END","name","prefabInstance","frameNodeNum","position","parent","destroy","row","floor","x","getChildByName","nodePrefab","frameNode","col","y","rowStart","colStart","nodeNum","labelValue","verticalAlign","CENTER","numberLabels","selectedValue","parseInt","isNaN","play","solutionValue","isCorrect","labelBlockSelect","BLUE","unschedule","TimeFinish","pause","setItem","stringify","WinGame","completeMatch","score","RED","GameOver"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, VerticalTextAlignment, Label, Vec3, Color, Sprite, Button, director, AudioClip, AudioSource, Slider, Prefab, instantiate, Vec2, find} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\nimport { GameView } from './GameView';\r\nimport GameClient from '@dattenlagiday/oc_gamecenter_sdk_pkg';\r\nimport { StoredPersistNode } from './StoredPersistNode';\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n\r\n    // @property(Node)\r\n    // startGame: Node;\r\n    \r\n    @property({type:GameView})\r\n    gameView: GameView;\r\n\r\n    @property({type:Label})\r\n    numberLabels: Label[] = [];\r\n\r\n    //LevelPanel\r\n\r\n    @property({type:Node})\r\n    bgNodeValue: Node;\r\n    \r\n    //Audio Game\r\n\r\n    @property(Prefab)\r\n    frameNode: Prefab;\r\n\r\n    @property(Prefab)\r\n    frameNodeNum: Prefab;\r\n\r\n    selectedNode: Node = null;\r\n    puzzleGame: number[] = [];\r\n    solutionGame: number[] = [];\r\n    redNumber: number = 0;\r\n    difficultyLevel: number;\r\n    timeElapsed: number = 0; \r\n    timeBestArr: number[] = [];\r\n    timeBestArr1: number[] = [];\r\n    timeBestArr2: number[] = [];\r\n    volumeBg: number[] = [];\r\n    volumeEffect: number[] = [];\r\n\r\n    nodePositionArray: Vec3[] = [];\r\n    frameNodeNumArray: Node[] = [];\r\n\r\n    frameNodePositionArray: Vec3[] = [];\r\n    frameNodeArray: Node[] = [];\r\n    frameNodeArrayLength: number;\r\n\r\n    private volumeSudokuArray: number[] = [];\r\n    public gameClient;\r\n    matchId:string\r\n\r\n    public async start():Promise<void> {\r\n        let _this = this;\r\n        let parameters = find(\"GameClient\");\r\n        let gameClientParams = parameters.getComponent(StoredPersistNode);\r\n            \r\n        this.gameClient = gameClientParams.gameClient;\r\n        \r\n        await gameClientParams.gameClient.match\r\n            .startMatch()\r\n            .then((data) => {_this.matchId=data.matchId})\r\n            .catch((error) => console.log(error));\r\n\r\n        let bestscore=localStorage.getItem('bestTime'); \r\n        if(bestscore){\r\n            this.timeBestArr=JSON.parse(bestscore);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr))\r\n        }\r\n\r\n        let bestscore1=localStorage.getItem('bestTime1');\r\n        if(bestscore1){\r\n            this.timeBestArr1=JSON.parse(bestscore1);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1))\r\n        }\r\n\r\n        let bestscore2=localStorage.getItem('bestTime2');\r\n        if(bestscore2){\r\n            this.timeBestArr2=JSON.parse(bestscore2);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2))\r\n        }\r\n\r\n        let volumeValue = JSON.parse(localStorage.getItem('volumeSudokuArray'));\r\n\r\n        if (volumeValue.length == 0) {\r\n            this.gameView.AudioBg.volume = 0.7;\r\n            this.gameView.SelectNode.volume = 0.7;\r\n            this.gameView.WinAudio.volume = 0.7;\r\n            this.gameView.LoseAudio.volume = 0.7;\r\n        }\r\n        else {\r\n            this.gameView.AudioBg.volume = volumeValue[ volumeValue.length - 1];\r\n            this.gameView.SelectNode.volume = volumeValue[ volumeValue.length - 1];\r\n            this.gameView.WinAudio.volume = volumeValue[ volumeValue.length - 1];\r\n            this.gameView.LoseAudio.volume = volumeValue[ volumeValue.length - 1];\r\n        }\r\n\r\n        if (this.gameView.AudioBg.volume == 0.7) {\r\n            this.gameView.AudioMute.node.active = false;\r\n            this.gameView.AudioUnmute.node.active = true;\r\n        }\r\n        \r\n        if (this.gameView.AudioBg.volume == 0) {\r\n            this.gameView.AudioMute.node.active = true;\r\n            this.gameView.AudioUnmute.node.active = false;\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n        this.gameView.LevelPanel.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n        //this.createPuzzleBoard();\r\n        console.log(this.puzzleGame)\r\n        console.log(this.solutionGame)\r\n    }\r\n\r\n    updateTimer() {\r\n        this.timeElapsed++;\r\n        this.gameView.TimeLabel.string = `Thời gian : ${this.timeElapsed} giây`;\r\n    }\r\n\r\n    rePlayGame(){\r\n        director.loadScene(\"Menu\");\r\n    }\r\n\r\n    displayLevelPanel(){\r\n        this.gameView.LevelPanel.active = true;\r\n    }\r\n    \r\n    update(){\r\n        if(this.difficultyLevel == 0.2){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: DỄ'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất : ' +(Math.min(...this.timeBestArr));\r\n        } else if(this.difficultyLevel == 0.5){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: TRUNG BÌNH'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1));\r\n        } else if(this.difficultyLevel == 0.8){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: KHÓ'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2));\r\n        }\r\n\r\n        this.gameView.AudioMute.node.on(Button.EventType.CLICK, this.btnMute, this);\r\n        this.gameView.AudioUnmute.node.on(Button.EventType.CLICK, this.btnUnmute, this);\r\n    }\r\n\r\n    //levelFunction\r\n    easyLevelGame() {\r\n        this.difficultyLevel = 0.2;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.gameView.LevelLabel.string = \"Độ khó : DỄ\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n        this.gameView.PlayerFault.node.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n    }\r\n\r\n    mediumLevelGame() {\r\n        this.difficultyLevel = 0.5;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.gameView.LevelLabel.string = \"Độ khó : TRUNG BÌNH\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n        this.gameView.PlayerFault.node.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n    }\r\n\r\n    hardLevelGame() {\r\n        this.difficultyLevel = 0.8;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.active = true;\r\n        this.schedule(this.updateTimer, 1); \r\n        this.gameView.LevelLabel.string = \"Độ khó : KHÓ\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n        this.gameView.PlayerFault.node.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n    }\r\n\r\n    currentPos: Vec2 = null;\r\n    createPuzzleBoard(){\r\n        this.frameNodeArrayLength = 0;\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(this.difficultyLevel);\r\n\r\n        for (let i = 0; i < boardData.puzzle.length; i++) {\r\n            this.puzzleGame.push(boardData.puzzle[i] + 1);\r\n        }\r\n        for (let i = 0; i < boardData.solution.length; i++) {\r\n            this.solutionGame.push(boardData.solution[i] + 1);\r\n        }\r\n\r\n        let emtyNode = 0;\r\n        const nodeCheck = [];\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            nodeCheck.push([]);\r\n            for (let j = 0; j < 9; j++) {\r\n                nodeCheck[i].push({ filled: false });\r\n                let value = this.puzzleGame[i*9 + j];\r\n                const nodeSudoku = new Node(`ValueGame${i*9+j}`);\r\n\r\n                nodeSudoku.setPosition(i * 55, j * 55);\r\n                this.gameView.BoardNode.addChild(nodeSudoku);\r\n\r\n                const labelBlock = nodeSudoku.addComponent(Label);\r\n                labelBlock.string = value === 0 ? \"    \" : value.toString();\r\n                labelBlock.color = Color.BLACK;\r\n\r\n                if (value === 0) {\r\n                    emtyNode++;\r\n                }\r\n\r\n                const nodeState = {};\r\n                nodeSudoku.on(Node.EventType.TOUCH_END, () => {\r\n                    if (value === 0) {\r\n                        this.selectedNode = nodeSudoku;\r\n                        if (!nodeState[nodeSudoku.name]) {\r\n                            // nodeState[nodeSudoku.name] = true;\r\n                \r\n                            //Instantiate the prefab\r\n                            const prefabInstance = instantiate(this.frameNodeNum);\r\n                            prefabInstance.setPosition(nodeSudoku.position);\r\n                            nodeSudoku.parent.addChild(prefabInstance);\r\n                            this.nodePositionArray.push(prefabInstance.position);\r\n                            this.frameNodeNumArray.push(prefabInstance);\r\n                            if(this.nodePositionArray[this.nodePositionArray.length - 2] != prefabInstance.position) {\r\n                                if (this.frameNodeNumArray.length > 1) {\r\n                                    this.frameNodeNumArray[this.frameNodeNumArray.length - 2].destroy();\r\n                                }\r\n                            }\r\n                \r\n                            const row = Math.floor(nodeSudoku.position.x / 55);\r\n                            for (let i = 0; i < 9; i++) {\r\n                                if (i !== row) {\r\n                                    const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n                                    \r\n                                    this.frameNodeArray.push(nodePrefab);\r\n\r\n                                    console.log(this.frameNodeArray);\r\n                                    if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                        for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                            this.frameNodeArrayLength++;\r\n                                            console.log(this.frameNodeArrayLength);\r\n                                            console.log(this.frameNodeArray.length);\r\n                                            this.frameNodeArray[i - 1].destroy();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                \r\n                            const col = Math.floor(nodeSudoku.position.y / 55);\r\n                            for (let j = 0; j < 9; j++) {\r\n                                if (j !== col) {\r\n                                    const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n\r\n                                    this.frameNodeArray.push(nodePrefab);\r\n\r\n                                    console.log(this.frameNodeArray);\r\n                                    if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                        for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                            this.frameNodeArrayLength++;\r\n                                            console.log(this.frameNodeArrayLength);\r\n                                            console.log(this.frameNodeArray.length);\r\n                                            this.frameNodeArray[i - 1].destroy();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                \r\n                            const rowStart = Math.floor(row / 3) * 3;\r\n                            const colStart = Math.floor(col / 3) * 3;\r\n                            for (let i = rowStart; i < rowStart + 3; i++) {\r\n                                for (let j = colStart; j < colStart + 3; j++) {\r\n                                    if (i !== row && j !== col) {\r\n                                        const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                        const nodePrefab = instantiate(this.frameNode);\r\n                                        nodePrefab.setPosition(node.position);\r\n                                        node.parent.addChild(nodePrefab);\r\n\r\n                                        this.frameNodeArray.push(nodePrefab);\r\n\r\n                                        console.log(this.frameNodeArray);\r\n                                        if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                            for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                                this.frameNodeArrayLength++;\r\n                                                console.log(this.frameNodeArrayLength);\r\n                                                console.log(this.frameNodeArray.length);\r\n                                                this.frameNodeArray[i - 1].destroy();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                });\r\n                \r\n            }\r\n            const nodeNum = new Node(\"NumberValueLabel\");\r\n            const labelValue = nodeNum.addComponent(Label);\r\n            labelValue.string = `  ${i + 1}  `;\r\n            labelValue.color = Color.BLACK;\r\n\r\n            labelValue.verticalAlign = VerticalTextAlignment.CENTER;\r\n            nodeNum.parent = this.node;\r\n            nodeNum.position = new Vec3(i % 3 * 70 + 210, Math.floor(i / 3) * -60, 0);\r\n            this.numberLabels.push(labelValue);\r\n            nodeNum.on(Node.EventType.TOUCH_END, () => {\r\n                if (this.selectedNode) {\r\n                    const selectedValue = parseInt(labelValue.string);\r\n                    if (!isNaN(selectedValue)) {\r\n                        this.gameView.SelectNode.play();\r\n                        const i = Math.floor(this.selectedNode.position.x / 55);\r\n                        const j = Math.floor(this.selectedNode.position.y / 55);\r\n                        const position = i * 9 + j;\r\n                        const solutionValue = this.solutionGame[position];\r\n                        const isCorrect = selectedValue === solutionValue;\r\n                        console.log(isCorrect);\r\n                    \r\n                        const labelBlockSelect = this.selectedNode.getComponent(Label);\r\n\r\n                        console.log(nodeCheck[i][j].filled);\r\n                        if (!nodeCheck[i][j].filled) {\r\n                            if (isCorrect == true) {\r\n                                console.log(isCorrect);\r\n                                labelBlockSelect.color = Color.BLUE;\r\n                                emtyNode--;\r\n                                nodeCheck[i][j].filled = true;\r\n                                console.log(emtyNode);\r\n                            \r\n                                if (emtyNode === 0){\r\n                                    console.log(\"winner\");\r\n                                    this.unschedule(this.updateTimer);\r\n                                    this.gameView.TimeFinish.string = this.timeElapsed.toString() + \" giây\";\r\n                                    this.gameView.AudioBg.pause();\r\n                                    this.gameView.WinAudio.play();\r\n                                    // this.gameView.BgMain.getComponent(AudioSource).pause();      \r\n                                    if(this.difficultyLevel == 0.2){\r\n                                        this.timeBestArr.push(this.timeElapsed);\r\n                                        localStorage.setItem('bestTime', JSON.stringify(this.timeBestArr));\r\n                                    }\r\n                                    if(this.difficultyLevel == 0.5){\r\n                                        this.timeBestArr1.push(this.timeElapsed);\r\n                                        localStorage.setItem('bestTime1', JSON.stringify(this.timeBestArr1));\r\n                                    }   \r\n                                    if(this.difficultyLevel == 0.8){\r\n                                        this.timeBestArr2.push(this.timeElapsed);\r\n                                        localStorage.setItem('bestTime2', JSON.stringify(this.timeBestArr2));\r\n                                    }\r\n                                    this.gameView.WinGame.active = true;\r\n\r\n                                    this.gameClient.match\r\n                                    .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                    .then((data) => {})\r\n                                    .catch((error) => console.log(error));                   \r\n                                }         \r\n                            } \r\n                            else if (isCorrect == false) {\r\n                                console.log(isCorrect);\r\n                                labelBlockSelect.color = Color.RED;\r\n                                this.redNumber++;\r\n                                this.gameView.PlayerFault.string = `Lỗi: ${this.redNumber}/3`\r\n                                this.gameView.PlayerFault.node.active = true;\r\n                                if (this.redNumber == 4) {\r\n                                    console.log(\"thua rồi nhé !!!\");\r\n                                    this.gameView.BgBoardNode.active = false;\r\n                                    this.gameView.BoardNode.active = false;\r\n                                    this.gameView.GameOver.active = true;\r\n                                    this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                    this.gameView.NewGameBtn.node.active = false;\r\n                                    this.unschedule(this.updateTimer);\r\n                                    this.gameView.AudioBg.pause();\r\n                                    this.gameView.LoseAudio.play();\r\n                                    // this.gameView.BgMain.getComponent(AudioSource).pause();\r\n                                    \r\n                                    this.gameClient.match\r\n                                    .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                    .then((data) => {})\r\n                                    .catch((error) => console.log(error));\r\n                                }\r\n                                if(this.redNumber == 5){\r\n                                    this.redNumber--;\r\n                                    this.gameView.BgBoardNode.active = false;\r\n                                    this.gameView.BoardNode.active = false;\r\n                                    this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                    this.gameView.NewGameBtn.node.active = false;\r\n                                    this.unschedule(this.updateTimer);\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (nodeCheck[i][j].filled && isCorrect == false) {\r\n                            console.log(isCorrect);\r\n                            labelBlockSelect.color = Color.RED;\r\n                            this.redNumber++;\r\n                            this.gameView.PlayerFault.string = `Lỗi: ${this.redNumber}/3`\r\n                            this.gameView.PlayerFault.node.active = true;\r\n                            if (this.redNumber == 4) {\r\n                                console.log(\"thua rồi nhé !!!\");\r\n                                this.gameView.GameOver.active = true;\r\n                                this.gameView.BgBoardNode.active = false;\r\n                                this.gameView.BoardNode.active = false;\r\n                                this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                this.gameView.LoseAudio.play();\r\n                                this.gameView.AudioBg.pause();\r\n                                this.unschedule(this.updateTimer);\r\n                                // this.gameView.BgMain.getComponent(AudioSource).pause();\r\n                                this.gameView.NewGameBtn.node.active = false;\r\n                                \r\n                                this.gameClient.match\r\n                                .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                .then((data) => {})\r\n                                .catch((error) => console.log(error));\r\n                            }\r\n                            if(this.redNumber == 5){\r\n                                this.redNumber--;\r\n                                this.gameView.BgBoardNode.active = false;\r\n                                this.gameView.BoardNode.active = false;\r\n                                this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                this.gameView.NewGameBtn.node.active = false;\r\n                                this.unschedule(this.updateTimer);\r\n                            }\r\n                        }\r\n\r\n                        else if (nodeCheck[i][j].filled && isCorrect == true) {\r\n                            console.log(isCorrect);\r\n                            labelBlockSelect.color = Color.BLUE;\r\n                            nodeCheck[i][j].filled = true;\r\n                            console.log(emtyNode);\r\n                        }\r\n\r\n                        labelBlockSelect.string = selectedValue.toString();\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n    }   \r\n\r\n    private btnMute(AudioMute: Button) {\r\n        this.gameView.AudioMute.node.active = false;\r\n        this.gameView.AudioUnmute.node.active = true;\r\n        this.gameView.AudioBg.volume = 0.7;\r\n        this.gameView.SelectNode.volume = 0.7;\r\n        this.gameView.WinAudio.volume = 0.7;\r\n        this.gameView.LoseAudio.volume = 0.7;\r\n        this.volumeSudokuArray.push(this.gameView.AudioBg.volume);\r\n        localStorage.setItem('volumeSudokuArray', JSON.stringify(this.volumeSudokuArray));\r\n    }\r\n\r\n    private btnUnmute(AudioMute: Button) {\r\n        this.gameView.AudioMute.node.active = true;\r\n        this.gameView.AudioUnmute.node.active = false;\r\n        this.gameView.AudioBg.volume = 0;\r\n        this.gameView.SelectNode.volume = 0;\r\n        this.gameView.WinAudio.volume = 0;\r\n        this.gameView.LoseAudio.volume = 0;\r\n        this.volumeSudokuArray.push(this.gameView.AudioBg.volume);\r\n        localStorage.setItem('volumeSudokuArray', JSON.stringify(this.volumeSudokuArray));\r\n    }\r\n}\r\n\r\n\r\nexport function runScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\nexport function loadScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\n\r\n"]}