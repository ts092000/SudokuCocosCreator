{"version":3,"sources":["file:///C:/Users/ADMIN/OneDrive/M%C3%A1y%20t%C3%ADnh/SudokuMain2/SudokuMain2/assets/Script/GameController.ts"],"names":["runScene","arg0","Error","loadScene","_decorator","Component","Node","VerticalTextAlignment","Label","Vec3","Color","Sprite","director","AudioClip","AudioSource","Prefab","instantiate","find","SudokuCreator","GameView","StoredPersistNode","ccclass","property","GameController","type","selectedNode","puzzleGame","solutionGame","redNumber","difficultyLevel","timeElapsed","timeBestArr","timeBestArr1","timeBestArr2","volumeBg","volumeEffect","nodePositionArray","frameNodeNumArray","frameNodePositionArray","frameNodeArray","frameNodeArrayLength","gameClient","matchId","currentPos","start","_this","console","log","gameView","BoardNode","parameters","gameClientParams","getComponent","match","startMatch","then","data","catch","error","bestscore","localStorage","getItem","JSON","parse","BestTime","string","Math","min","bestscore1","bestscore2","onLoad","LevelPanel","active","updateTimer","TimeLabel","rePlayGame","displayLevelPanel","update","BestTimeLevel","easyLevelGame","createPuzzleBoard","bgNodeValue","node","schedule","LevelLabel","NewGameBtn","mediumLevelGame","hardLevelGame","sudokuCreator","childMatrixWidth","boardData","createSudoku","i","puzzle","length","push","solution","emtyNode","nodeCheck","filled","value","j","nodeSudoku","setPosition","addChild","labelBlock","addComponent","toString","color","BLACK","nodeState","on","EventType","TOUCH_END","name","prefabInstance","frameNodeNum","position","parent","destroy","row","floor","x","getChildByName","nodePrefab","frameNode","col","y","rowStart","colStart","nodeNum","labelValue","verticalAlign","CENTER","numberLabels","selectedValue","parseInt","isNaN","volumeSelectNode","play","solutionValue","isCorrect","labelBlockSelect","BLUE","unschedule","TimeFinish","volumeWinGame","BgMain","pause","setItem","stringify","WinGame","completeMatch","score","RED","PlayerFault","GameOver","volumeLose"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, VerticalTextAlignment, Label, Vec3, Color, Sprite, Button, director, AudioClip, AudioSource, Slider, Prefab, instantiate, Vec2, find} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\nimport { GameView } from './GameView';\r\nimport GameClient from '@dattenlagiday/oc_gamecenter_sdk_pkg';\r\nimport { StoredPersistNode } from './StoredPersistNode';\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n\r\n    // @property(Node)\r\n    // startGame: Node;\r\n    \r\n    @property({type:GameView})\r\n    gameView: GameView;\r\n\r\n    @property({type:Label})\r\n    numberLabels: Label[] = [];\r\n\r\n    //LevelPanel\r\n\r\n    @property(Sprite)\r\n    bgNodeValue: Sprite;\r\n    \r\n    //Audio Game\r\n\r\n    @property(AudioClip)\r\n    volumeStart: AudioClip;\r\n\r\n    @property(AudioClip)\r\n    volumeSelectNode: AudioClip;\r\n\r\n    @property(AudioClip)\r\n    volumeLose: AudioClip;\r\n\r\n    @property(AudioClip)\r\n    volumeWinGame: AudioClip;\r\n\r\n    @property(Prefab)\r\n    frameNode: Prefab;\r\n\r\n    @property(Prefab)\r\n    frameNodeNum: Prefab;\r\n\r\n    selectedNode: Node = null;\r\n    puzzleGame: number[] = [];\r\n    solutionGame: number[] = [];\r\n    redNumber: number = 0;\r\n    difficultyLevel: number;\r\n    timeElapsed: number = 0; \r\n    timeBestArr: number[] = [];\r\n    timeBestArr1: number[] = [];\r\n    timeBestArr2: number[] = [];\r\n    volumeBg: number[] = [];\r\n    volumeEffect: number[] = [];\r\n\r\n    nodePositionArray: Vec3[] = [];\r\n    frameNodeNumArray: Node[] = [];\r\n\r\n    frameNodePositionArray: Vec3[] = [];\r\n    frameNodeArray: Node[] = [];\r\n    frameNodeArrayLength: number;\r\n\r\n    public gameClient;\r\n    matchId:string\r\n\r\n    public async start():Promise<void> {\r\n        let _this = this;\r\n        console.log(this.gameView.BoardNode);\r\n        console.log(this.gameClient);\r\n\r\n        let parameters = find(\"GameClient\");\r\n        let gameClientParams = parameters.getComponent(StoredPersistNode);\r\n            \r\n        this.gameClient = gameClientParams.gameClient;\r\n        \r\n        await gameClientParams.gameClient.match\r\n            .startMatch()\r\n            .then((data) => {_this.matchId=data.matchId})\r\n            .catch((error) => console.log(error));\r\n\r\n        let bestscore=localStorage.getItem('bestTime'); \r\n        if(bestscore){\r\n            this.timeBestArr=JSON.parse(bestscore);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr))\r\n        }\r\n\r\n        let bestscore1=localStorage.getItem('bestTime1');\r\n        if(bestscore1){\r\n            this.timeBestArr1=JSON.parse(bestscore1);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1))\r\n        }\r\n\r\n        let bestscore2=localStorage.getItem('bestTime2');\r\n        if(bestscore2){\r\n            this.timeBestArr2=JSON.parse(bestscore2);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2))\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n        this.gameView.LevelPanel.active = true;\r\n        //this.createPuzzleBoard();\r\n        console.log(this.puzzleGame)\r\n        console.log(this.solutionGame)\r\n    }\r\n\r\n    updateTimer() {\r\n        this.timeElapsed++;\r\n        this.gameView.TimeLabel.string = `Thời gian : ${this.timeElapsed} giây`;\r\n    }\r\n\r\n    rePlayGame(){\r\n        director.loadScene(\"MainGame\");\r\n    }\r\n\r\n    displayLevelPanel(){\r\n        this.gameView.LevelPanel.active = true;\r\n    }\r\n    \r\n    update(){\r\n        if(this.difficultyLevel == 0.2){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: DỄ'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất : ' +(Math.min(...this.timeBestArr));\r\n        } else if(this.difficultyLevel == 0.5){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: TRUNG BÌNH'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1));\r\n        } else if(this.difficultyLevel == 0.8){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: KHÓ'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2));\r\n        }\r\n    }\r\n\r\n    //levelFunction\r\n    easyLevelGame() {\r\n        this.difficultyLevel = 0.2;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.node.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.gameView.LevelLabel.string = \"Độ khó : DỄ\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n    }\r\n\r\n    mediumLevelGame() {\r\n        this.difficultyLevel = 0.5;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.node.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.gameView.LevelLabel.string = \"Độ khó : TRUNG BÌNH\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n    }\r\n\r\n    hardLevelGame() {\r\n        this.difficultyLevel = 0.8;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.node.active = true;\r\n        this.schedule(this.updateTimer, 1); \r\n        this.gameView.LevelLabel.string = \"Độ khó : KHÓ\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n    }\r\n\r\n    currentPos: Vec2 = null;\r\n    createPuzzleBoard(){\r\n        this.frameNodeArrayLength = 0;\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(this.difficultyLevel);\r\n\r\n        for (let i = 0; i < boardData.puzzle.length; i++) {\r\n            this.puzzleGame.push(boardData.puzzle[i] + 1);\r\n        }\r\n        for (let i = 0; i < boardData.solution.length; i++) {\r\n            this.solutionGame.push(boardData.solution[i] + 1);\r\n        }\r\n\r\n        let emtyNode = 0;\r\n        const nodeCheck = [];\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            nodeCheck.push([]);\r\n            for (let j = 0; j < 9; j++) {\r\n                nodeCheck[i].push({ filled: false });\r\n                let value = this.puzzleGame[i*9 + j];\r\n                const nodeSudoku = new Node(`ValueGame${i*9+j}`);\r\n\r\n                nodeSudoku.setPosition(i * 55, j * 55);\r\n                this.gameView.BoardNode.addChild(nodeSudoku);\r\n\r\n                const labelBlock = nodeSudoku.addComponent(Label);\r\n                labelBlock.string = value === 0 ? \"    \" : value.toString();\r\n                labelBlock.color = Color.BLACK;\r\n\r\n                if (value === 0) {\r\n                    emtyNode++;\r\n                }\r\n\r\n                const nodeState = {};\r\n                nodeSudoku.on(Node.EventType.TOUCH_END, () => {\r\n                    if (value === 0) {\r\n                        this.selectedNode = nodeSudoku;\r\n                        if (!nodeState[nodeSudoku.name]) {\r\n                            // nodeState[nodeSudoku.name] = true;\r\n                \r\n                            //Instantiate the prefab\r\n                            const prefabInstance = instantiate(this.frameNodeNum);\r\n                            prefabInstance.setPosition(nodeSudoku.position);\r\n                            nodeSudoku.parent.addChild(prefabInstance);\r\n                            this.nodePositionArray.push(prefabInstance.position);\r\n                            this.frameNodeNumArray.push(prefabInstance);\r\n                            if(this.nodePositionArray[this.nodePositionArray.length - 2] != prefabInstance.position) {\r\n                                if (this.frameNodeNumArray.length > 1) {\r\n                                    this.frameNodeNumArray[this.frameNodeNumArray.length - 2].destroy();\r\n                                }\r\n                            }\r\n                \r\n                            const row = Math.floor(nodeSudoku.position.x / 55);\r\n                            for (let i = 0; i < 9; i++) {\r\n                                if (i !== row) {\r\n                                    const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n                                    \r\n                                    this.frameNodeArray.push(nodePrefab);\r\n\r\n                                    console.log(this.frameNodeArray);\r\n                                    if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                        for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                            this.frameNodeArrayLength++;\r\n                                            console.log(this.frameNodeArrayLength);\r\n                                            console.log(this.frameNodeArray.length);\r\n                                            this.frameNodeArray[i].destroy();\r\n                                        }\r\n                                        // this.frameNodeArray.splice(-20);\r\n                                    }\r\n                                }\r\n                            }\r\n                \r\n                            const col = Math.floor(nodeSudoku.position.y / 55);\r\n                            for (let j = 0; j < 9; j++) {\r\n                                if (j !== col) {\r\n                                    const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n\r\n                                    this.frameNodeArray.push(nodePrefab);\r\n\r\n                                    console.log(this.frameNodeArray);\r\n                                    if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                        for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                            this.frameNodeArrayLength++;\r\n                                            console.log(this.frameNodeArrayLength);\r\n                                            console.log(this.frameNodeArray.length);\r\n                                            this.frameNodeArray[i].destroy();\r\n                                        }\r\n                                        // this.frameNodeArray.splice(-20);\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n                \r\n                            const rowStart = Math.floor(row / 3) * 3;\r\n                            const colStart = Math.floor(col / 3) * 3;\r\n                            for (let i = rowStart; i < rowStart + 3; i++) {\r\n                                for (let j = colStart; j < colStart + 3; j++) {\r\n                                    if (i !== row && j !== col) {\r\n                                        const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                        const nodePrefab = instantiate(this.frameNode);\r\n                                        nodePrefab.setPosition(node.position);\r\n                                        node.parent.addChild(nodePrefab);\r\n\r\n                                        this.frameNodeArray.push(nodePrefab);\r\n\r\n                                        console.log(this.frameNodeArray);\r\n                                        if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                            for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                                this.frameNodeArrayLength++;\r\n                                                console.log(this.frameNodeArrayLength);\r\n                                                console.log(this.frameNodeArray.length);\r\n                                                this.frameNodeArray[i].destroy();\r\n                                            }\r\n                                            // this.frameNodeArray.splice(-20);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                });\r\n                \r\n                const nodeNum = new Node(\"NumberValueLabel\");\r\n                const labelValue = nodeNum.addComponent(Label);\r\n                labelValue.string = `  ${i + 1}  `;\r\n                labelValue.color = Color.BLACK;\r\n\r\n                labelValue.verticalAlign = VerticalTextAlignment.CENTER;\r\n                nodeNum.parent = this.node;\r\n                nodeNum.position = new Vec3(i % 3 * 70 + 210, Math.floor(i / 3) * -60, 0);\r\n                this.numberLabels.push(labelValue);\r\n                nodeNum.on(Node.EventType.TOUCH_END, () => {\r\n                    if (this.selectedNode) {\r\n                        const selectedValue = parseInt(labelValue.string);\r\n                        if (!isNaN(selectedValue)) {\r\n                            this.volumeSelectNode.play();\r\n                            const i = Math.floor(this.selectedNode.position.x / 55);\r\n                            const j = Math.floor(this.selectedNode.position.y / 55);\r\n                            const position = i * 9 + j;\r\n                            const solutionValue = this.solutionGame[position];\r\n                            const isCorrect = selectedValue === solutionValue;\r\n                            console.log(isCorrect);\r\n                        \r\n                            const labelBlockSelect = this.selectedNode.getComponent(Label);\r\n\r\n                            if (!nodeCheck[i][j].filled) {\r\n                                if (isCorrect) {\r\n                                    labelBlockSelect.color = Color.BLUE;\r\n                                    emtyNode--;\r\n                                    nodeCheck[i][j].filled = true;\r\n                                    console.log(emtyNode);\r\n                                \r\n                                    if (emtyNode === 0){\r\n                                        console.log(\"winner\");\r\n                                        this.unschedule(this.updateTimer);\r\n                                        this.gameView.TimeFinish.string = this.timeElapsed.toString() + \" giây\";\r\n                                        this.volumeWinGame.play();\r\n                                        this.gameView.BgMain.getComponent(AudioSource).pause();      \r\n                                        if(this.difficultyLevel == 0.2){\r\n                                            this.timeBestArr.push(this.timeElapsed);\r\n                                            localStorage.setItem('bestTime', JSON.stringify(this.timeBestArr));\r\n                                        }\r\n                                        if(this.difficultyLevel == 0.5){\r\n                                            this.timeBestArr1.push(this.timeElapsed);\r\n                                            localStorage.setItem('bestTime1', JSON.stringify(this.timeBestArr1));\r\n                                        }   \r\n                                        if(this.difficultyLevel == 0.8){\r\n                                            this.timeBestArr2.push(this.timeElapsed);\r\n                                            localStorage.setItem('bestTime2', JSON.stringify(this.timeBestArr2));\r\n                                        }\r\n                                        this.gameView.WinGame.active = true;\r\n\r\n                                        this.gameClient.match\r\n                                        .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                        .then((data) => {})\r\n                                        .catch((error) => console.log(error));                   \r\n                                    }         \r\n                                } else {\r\n                                    labelBlockSelect.color = Color.RED;\r\n                                    this.redNumber++;\r\n                                    this.gameView.PlayerFault.string = `Lỗi: ${this.redNumber}/3`\r\n                                    this.gameView.PlayerFault.node.active = true;\r\n                                    if (this.redNumber == 4) {\r\n                                        console.log(\"thua rồi nhé !!!\");\r\n                                        this.gameView.GameOver.active = true;\r\n                                        this.gameView.PlayerFault.string = `Lỗi 3/3`;\r\n                                        this.volumeLose.play();\r\n                                        this.gameView.BgMain.getComponent(AudioSource).pause();\r\n                                        \r\n                                        \r\n                                        this.gameClient.match\r\n                                        .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                        .then((data) => {})\r\n                                        .catch((error) => console.log(error));\r\n                                    }\r\n                                    if(this.redNumber == 5){\r\n                                        this.redNumber--;\r\n                                        this.gameView.PlayerFault.string = `Lỗi 3/3`; \r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            labelBlockSelect.string = selectedValue.toString();\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n    }   \r\n}\r\n\r\n\r\nexport function runScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\nexport function loadScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\n\r\n"]}