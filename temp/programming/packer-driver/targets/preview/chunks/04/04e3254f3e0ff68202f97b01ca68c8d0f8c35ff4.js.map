{"version":3,"sources":["file:///D:/gameCocos/SudokuMain2/assets/Script/GameController.ts"],"names":["runScene","arg0","Error","loadScene","_decorator","Component","Node","VerticalTextAlignment","Label","Vec3","Color","Sprite","Button","director","AudioClip","AudioSource","Slider","Prefab","instantiate","SudokuCreator","GameView","GameClient","ccclass","property","GameController","selectedNode","puzzleGame","solutionGame","redNumber","difficultyLevel","timeElapsed","timeBestArr","timeBestArr1","timeBestArr2","volumeBg","volumeEffect","gameClient","matchId","currentPos","start","undefined","initAsync","then","console","log","match","catch","err","startMatch","data","error","bestscore","localStorage","getItem","JSON","parse","bestTime","string","Math","min","bestscore1","bestscore2","saveVolumeBg","bgMain","getComponent","volume","length","settingVolumeBg","progress","saveVolumeEffect","settingVolumeEffect","onLoad","levelPanel","active","startGamePlayer","gameView","StartGame","volumeStart","play","updateTimer","timerLabel","volumeGameSetting","progressBg","push","setItem","stringify","displayVolumeSetting","settingNode","pause","volumeGameEffect","volumeLose","getVolume","setVolume","volumeWinGame","volumeSelectNode","progressEffect","rePlayGame","continueGame","resume","displayLevelPanel","update","bestTimeLevle","easyLevelGame","createPuzzleBoard","bgNodeValue","node","schedule","levelLabel","newGame","mediumLevelGame","hardLevelGame","sudokuCreator","childMatrixWidth","boardData","createSudoku","i","puzzle","solution","emtyNode","nodeCheck","filled","value","j","nodeSudoku","setPosition","boardNode","addChild","labelBlock","addComponent","toString","color","BLACK","nodeState","on","EventType","TOUCH_END","name","prefabInstance","frameNodeNum","position","parent","row","floor","x","getChildByName","nodePrefab","frameNode","setTimeout","destroy","col","y","rowStart","colStart","nodeNum","labelValue","verticalAlign","CENTER","numberLabels","selectedValue","parseInt","isNaN","solutionValue","isCorrect","labelBlockSelect","BLUE","winGame","completeMatch","score","RED","playerFault","gameOver"],"mappings":";;;;;;;;;;;;;;;AAqbO,WAASA,QAAT,CAAkBC,IAAlB,EAAgC;AACnC,UAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACH;;AAGM,WAASC,SAAT,CAAmBF,IAAnB,EAAiC;AACpC,UAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACH;;;;;;;;;;;;;;;cAPeF,Q;eAKAG;;;;;;;;;;AA1bPC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,qB,OAAAA,qB;AAAuBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;AAE1IC,MAAAA,a,sBAAAA,a;;AACAC,MAAAA,Q,iBAAAA,Q;;AACFC,MAAAA,U;;;;;;;;;OAHD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBnB,U;;gCAMjBoB,c,WADZF,OAAO,CAAC,gBAAD,C,UAMHC,QAAQ;AAAA;AAAA,+B,UAGRA,QAAQ,CAACjB,IAAD,C,UAGRiB,QAAQ,CAACjB,IAAD,C,UAGRiB,QAAQ,CAACf,KAAD,C,UAGRe,QAAQ,CAACjB,IAAD,C,UAGRiB,QAAQ,CAACjB,IAAD,C,UAGRiB,QAAQ,CAACX,MAAD,C,UAGRW,QAAQ,CAACX,MAAD,C,WAIRW,QAAQ,CAACX,MAAD,C,WAGRW,QAAQ,CAACX,MAAD,C,WAGRW,QAAQ,CAACX,MAAD,C,WAGRW,QAAQ,CAACf,KAAD,C,WAGRe,QAAQ,CAACZ,MAAD,C,WAKRY,QAAQ,CAACT,SAAD,C,WAGRS,QAAQ,CAACT,SAAD,C,WAGRS,QAAQ,CAACT,SAAD,C,WAGRS,QAAQ,CAACT,SAAD,C,WAGRS,QAAQ,CAACZ,MAAD,C,WAGRY,QAAQ,CAACX,MAAD,C,WAGRW,QAAQ,CAACjB,IAAD,C,WAGRiB,QAAQ,CAACP,MAAD,C,WAGRO,QAAQ,CAACP,MAAD,C,WAGRO,QAAQ,CAACf,KAAD,C,WAGRe,QAAQ,CAACf,KAAD,C,WAGRe,QAAQ,CAACjB,IAAD,C,WAGRiB,QAAQ,CAACf,KAAD,C,WAGRe,QAAQ,CAACf,KAAD,C,WAGRe,QAAQ,CAACN,MAAD,C,WAGRM,QAAQ,CAACN,MAAD,C,2BA7Fb,MACaO,cADb,SACoCnB,SADpC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eA+F1CoB,YA/F0C,GA+FrB,IA/FqB;AAAA,eAgG1CC,UAhG0C,GAgGnB,EAhGmB;AAAA,eAiG1CC,YAjG0C,GAiGjB,EAjGiB;AAAA,eAkG1CC,SAlG0C,GAkGtB,CAlGsB;AAAA,eAmG1CC,eAnG0C;AAAA,eAoG1CC,WApG0C,GAoGpB,CApGoB;AAAA,eAqG1CC,WArG0C,GAqGlB,EArGkB;AAAA,eAsG1CC,YAtG0C,GAsGjB,EAtGiB;AAAA,eAuG1CC,YAvG0C,GAuGjB,EAvGiB;AAAA,eAwG1CC,QAxG0C,GAwGrB,EAxGqB;AAAA,eAyG1CC,YAzG0C,GAyGjB,EAzGiB;AAAA,eA0G1CC,UA1G0C;AAAA,eA2G1CC,OA3G0C;AAAA,eAqP1CC,UArP0C,GAqPvB,IArPuB;AAAA;;AA6GzBC,QAAAA,KAAK,GAAiB;AAAA;;AAAA;AAC/B,gBAAG,KAAI,CAACH,UAAL,KAAkBI,SAArB,EACA;AACA,cAAA,KAAI,CAACJ,UAAL,GAAkB;AAAA;AAAA,4CAAe,0BAAf,EAA0C,sCAA1C,CAAlB;AACA,oBAAM,KAAI,CAACA,UAAL,CAAgBK,SAAhB,GACDC,IADC,CACI,MAAM;AAACC,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACR,UAAL,CAAgBS,KAA5B;AAAmC,eAD9C,EAEDC,KAFC,CAEMC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAFd,CAAN;AAGC;;AAED,kBAAM,KAAI,CAACX,UAAL,CAAgBS,KAAhB,CACDG,UADC,GAEDN,IAFC,CAEKO,IAAD,IAAU;AAAC,cAAA,KAAI,CAACZ,OAAL,GAAaY,IAAI,CAACZ,OAAlB;AAA0B,aAFzC,EAGDS,KAHC,CAGMI,KAAD,IAAWP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAHhB,CAAN;AAKA,gBAAIC,SAAS,GAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;;AACA,gBAAGF,SAAH,EAAa;AACT,cAAA,KAAI,CAACpB,WAAL,GAAiBuB,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAjB;AACA,cAAA,KAAI,CAACK,QAAL,CAAcC,MAAd,GAAuB,2BAA2BC,IAAI,CAACC,GAAL,CAAS,GAAG,KAAI,CAAC5B,WAAjB,CAAlD;AACH;;AACD,gBAAI6B,UAAU,GAACR,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAf;;AACA,gBAAGO,UAAH,EAAc;AACV,cAAA,KAAI,CAAC5B,YAAL,GAAkBsB,IAAI,CAACC,KAAL,CAAWK,UAAX,CAAlB;AACA,cAAA,KAAI,CAACJ,QAAL,CAAcC,MAAd,GAAuB,2BAA2BC,IAAI,CAACC,GAAL,CAAS,GAAG,KAAI,CAAC3B,YAAjB,CAAlD;AACH;;AACD,gBAAI6B,UAAU,GAACT,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAf;;AACA,gBAAGQ,UAAH,EAAc;AACV,cAAA,KAAI,CAAC5B,YAAL,GAAkBqB,IAAI,CAACC,KAAL,CAAWM,UAAX,CAAlB;AACA,cAAA,KAAI,CAACL,QAAL,CAAcC,MAAd,GAAuB,2BAA2BC,IAAI,CAACC,GAAL,CAAS,GAAG,KAAI,CAAC1B,YAAjB,CAAlD;AACH;;AAED,gBAAI6B,YAAY,GAAGV,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAnB;;AACA,gBAAGS,YAAH,EAAgB;AACZ,cAAA,KAAI,CAAC5B,QAAL,GAAcoB,IAAI,CAACC,KAAL,CAAWO,YAAX,CAAd;AACA,cAAA,KAAI,CAACC,MAAL,CAAYC,YAAZ,CAAyBjD,WAAzB,EAAsCkD,MAAtC,GAA+C,KAAI,CAAC/B,QAAL,CAAc,KAAI,CAACA,QAAL,CAAcgC,MAAd,GAAuB,CAArC,CAA/C;AACA,cAAA,KAAI,CAACC,eAAL,CAAqBC,QAArB,GAAgC,KAAI,CAAClC,QAAL,CAAc,KAAI,CAACA,QAAL,CAAcgC,MAAd,GAAuB,CAArC,CAAhC;AACH;;AACDvB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACuB,eAAL,CAAqBC,QAAjC;AAEA,gBAAIC,gBAAgB,GAAGjB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAvB;;AACA,gBAAGgB,gBAAH,EAAoB;AAChB,cAAA,KAAI,CAAClC,YAAL,GAAkBmB,IAAI,CAACC,KAAL,CAAWc,gBAAX,CAAlB;AACA,cAAA,KAAI,CAACC,mBAAL,CAAyBF,QAAzB,GAAmC,KAAI,CAACjC,YAAL,CAAkB,KAAI,CAACA,YAAL,CAAkB+B,MAAlB,GAA2B,CAA7C,CAAnC;AACH;AA1C8B;AA2CtC;;AACDK,QAAAA,MAAM,GAAG;AACL,eAAKC,UAAL,CAAgBC,MAAhB,GAAyB,IAAzB,CADK,CAEL;;AACA9B,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,UAAjB;AACAiB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,YAAjB;AACH;;AACD+C,QAAAA,eAAe,GAAE;AACb,eAAKC,QAAL,CAAcC,SAAd,CAAwBH,MAAxB,GAAiC,KAAjC;AACA,eAAKI,WAAL,CAAiBC,IAAjB;AACH;;AACDC,QAAAA,WAAW,GAAG;AACV,eAAKjD,WAAL;AACA,eAAKkD,UAAL,CAAgBvB,MAAhB,yBAAwC,KAAK3B,WAA7C;AACH;;AACDmD,QAAAA,iBAAiB,GAAE;AACf,eAAKlB,MAAL,CAAYC,YAAZ,CAAyBjD,WAAzB,EAAsCkD,MAAtC,GAA+C,KAAKE,eAAL,CAAqBC,QAApE;AACA,cAAMc,UAAU,GAAG,KAAKf,eAAL,CAAqBC,QAAxC;AACA,eAAKlC,QAAL,CAAciD,IAAd,CAAmBD,UAAnB;AACA9B,UAAAA,YAAY,CAACgC,OAAb,CAAqB,UAArB,EAAiC9B,IAAI,CAAC+B,SAAL,CAAe,KAAKnD,QAApB,CAAjC;AACH;;AACDoD,QAAAA,oBAAoB,GAAE;AAClB,eAAKC,WAAL,CAAiBd,MAAjB,GAA0B,IAA1B;AACA5D,UAAAA,QAAQ,CAAC2E,KAAT;AACH;;AACDC,QAAAA,gBAAgB,GAAE;AACd,eAAKC,UAAL,CAAgBC,SAAhB;AACA,eAAKD,UAAL,CAAgBE,SAAhB,CAA0B,KAAKtB,mBAAL,CAAyBF,QAAnD;AACA,eAAKyB,aAAL,CAAmBF,SAAnB;AACA,eAAKE,aAAL,CAAmBD,SAAnB,CAA6B,KAAKtB,mBAAL,CAAyBF,QAAtD;AACA,eAAK0B,gBAAL,CAAsBH,SAAtB;AACA,eAAKG,gBAAL,CAAsBF,SAAtB,CAAgC,KAAKtB,mBAAL,CAAyBF,QAAzD;AACA,eAAKS,WAAL,CAAiBc,SAAjB;AACA,eAAKd,WAAL,CAAiBe,SAAjB,CAA2B,KAAKtB,mBAAL,CAAyBF,QAApD;AAEA,cAAM2B,cAAc,GAAG,KAAKzB,mBAAL,CAAyBF,QAAhD;AACA,eAAKjC,YAAL,CAAkBgD,IAAlB,CAAuBY,cAAvB;AACA3C,UAAAA,YAAY,CAACgC,OAAb,CAAqB,cAArB,EAAqC9B,IAAI,CAAC+B,SAAL,CAAe,KAAKlD,YAApB,CAArC;AACH;;AACD6D,QAAAA,UAAU,GAAE;AACRnF,UAAAA,QAAQ,CAACV,SAAT,CAAmB,UAAnB;AACH;;AACD8F,QAAAA,YAAY,GAAE;AACVpF,UAAAA,QAAQ,CAACqF,MAAT;AACA,eAAKX,WAAL,CAAiBd,MAAjB,GAA0B,KAA1B;AACH;;AACD0B,QAAAA,iBAAiB,GAAE;AACf,eAAK3B,UAAL,CAAgBC,MAAhB,GAAyB,IAAzB;AACH;;AAED2B,QAAAA,MAAM,GAAE;AACJ,cAAG,KAAKvE,eAAL,IAAwB,GAA3B,EAA+B;AAC3B,iBAAKwE,aAAL,CAAmB5C,MAAnB,GAA4B,YAA5B;AACA,iBAAKD,QAAL,CAAcC,MAAd,GAAuB,4BAA4BC,IAAI,CAACC,GAAL,CAAS,GAAG,KAAK5B,WAAjB,CAAnD;AACH,WAHD,MAGO,IAAG,KAAKF,eAAL,IAAwB,GAA3B,EAA+B;AAClC,iBAAKwE,aAAL,CAAmB5C,MAAnB,GAA4B,oBAA5B;AACA,iBAAKD,QAAL,CAAcC,MAAd,GAAuB,2BAA2BC,IAAI,CAACC,GAAL,CAAS,GAAG,KAAK3B,YAAjB,CAAlD;AACH,WAHM,MAGA,IAAG,KAAKH,eAAL,IAAwB,GAA3B,EAA+B;AAClC,iBAAKwE,aAAL,CAAmB5C,MAAnB,GAA4B,aAA5B;AACA,iBAAKD,QAAL,CAAcC,MAAd,GAAuB,2BAA2BC,IAAI,CAACC,GAAL,CAAS,GAAG,KAAK1B,YAAjB,CAAlD;AAEH;AACJ,SAtNyC,CAwN1C;;;AACAqE,QAAAA,aAAa,GAAG;AACZ,eAAKzE,eAAL,GAAuB,GAAvB;AACA,eAAK0E,iBAAL;AACA,eAAK/B,UAAL,CAAgBC,MAAhB,GAAyB,KAAzB;AACA,eAAK+B,WAAL,CAAiBC,IAAjB,CAAsBhC,MAAtB,GAA+B,IAA/B;AACA,eAAKiC,QAAL,CAAc,KAAK3B,WAAnB,EAAgC,CAAhC;AACA,eAAK4B,UAAL,CAAgBlD,MAAhB,GAAyB,aAAzB;AACA,eAAKmD,OAAL,CAAaH,IAAb,CAAkBhC,MAAlB,GAA2B,IAA3B;AACH;;AACDoC,QAAAA,eAAe,GAAG;AACd,eAAKhF,eAAL,GAAuB,GAAvB;AACA,eAAK0E,iBAAL;AACA,eAAK/B,UAAL,CAAgBC,MAAhB,GAAyB,KAAzB;AACA,eAAK+B,WAAL,CAAiBC,IAAjB,CAAsBhC,MAAtB,GAA+B,IAA/B;AACA,eAAKiC,QAAL,CAAc,KAAK3B,WAAnB,EAAgC,CAAhC;AACA,eAAK4B,UAAL,CAAgBlD,MAAhB,GAAyB,qBAAzB;AACA,eAAKmD,OAAL,CAAaH,IAAb,CAAkBhC,MAAlB,GAA2B,IAA3B;AACH;;AACDqC,QAAAA,aAAa,GAAG;AACZ,eAAKjF,eAAL,GAAuB,GAAvB;AACA,eAAK0E,iBAAL;AACA,eAAK/B,UAAL,CAAgBC,MAAhB,GAAyB,KAAzB;AACA,eAAK+B,WAAL,CAAiBC,IAAjB,CAAsBhC,MAAtB,GAA+B,IAA/B;AACA,eAAKiC,QAAL,CAAc,KAAK3B,WAAnB,EAAgC,CAAhC;AACA,eAAK4B,UAAL,CAAgBlD,MAAhB,GAAyB,cAAzB;AACA,eAAKmD,OAAL,CAAaH,IAAb,CAAkBhC,MAAlB,GAA2B,IAA3B;AACH;;AAGD8B,QAAAA,iBAAiB,GAAE;AAAA;;AAEf,cAAIQ,aAAa,GAAG;AAAA;AAAA,8CAAkB;AAACC,YAAAA,gBAAgB,EAAE;AAAnB,WAAlB,CAApB;AACA,cAAIC,SAAS,GAAGF,aAAa,CAACG,YAAd,CAA2B,KAAKrF,eAAhC,CAAhB;;AAEA,eAAK,IAAIsF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACG,MAAV,CAAiBlD,MAArC,EAA6CiD,CAAC,EAA9C,EAAkD;AAC9C,iBAAKzF,UAAL,CAAgByD,IAAhB,CAAqB8B,SAAS,CAACG,MAAV,CAAiBD,CAAjB,IAAsB,CAA3C;AACH;;AACD,eAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGF,SAAS,CAACI,QAAV,CAAmBnD,MAAvC,EAA+CiD,EAAC,EAAhD,EAAoD;AAChD,iBAAKxF,YAAL,CAAkBwD,IAAlB,CAAuB8B,SAAS,CAACI,QAAV,CAAmBF,EAAnB,IAAwB,CAA/C;AACH;;AAED,cAAIG,QAAQ,GAAG,CAAf;AACA,cAAMC,SAAS,GAAG,EAAlB;;AAbe,wCAea;AACxBA,YAAAA,SAAS,CAACpC,IAAV,CAAe,EAAf;;AADwB,4CAEI;AACxBoC,cAAAA,SAAS,CAACJ,CAAD,CAAT,CAAahC,IAAb,CAAkB;AAAEqC,gBAAAA,MAAM,EAAE;AAAV,eAAlB;AACA,kBAAIC,KAAK,GAAG,MAAI,CAAC/F,UAAL,CAAgByF,CAAC,GAAC,CAAF,GAAMO,CAAtB,CAAZ;AACA,kBAAMC,UAAU,GAAG,IAAIrH,IAAJ,gBAAqB6G,CAAC,GAAC,CAAF,GAAIO,CAAzB,EAAnB;AAEAC,cAAAA,UAAU,CAACC,WAAX,CAAuBT,CAAC,GAAG,EAA3B,EAA+BO,CAAC,GAAG,EAAnC;;AACA,cAAA,MAAI,CAACG,SAAL,CAAeC,QAAf,CAAwBH,UAAxB;;AAEA,kBAAMI,UAAU,GAAGJ,UAAU,CAACK,YAAX,CAAwBxH,KAAxB,CAAnB;AACAuH,cAAAA,UAAU,CAACtE,MAAX,GAAoBgE,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAAK,CAACQ,QAAN,EAA3C;AACAF,cAAAA,UAAU,CAACG,KAAX,GAAmBxH,KAAK,CAACyH,KAAzB;;AAEA,kBAAIV,KAAK,KAAK,CAAd,EAAiB;AACbH,gBAAAA,QAAQ;AACX;;AAED,kBAAMc,SAAS,GAAG,EAAlB;AACAT,cAAAA,UAAU,CAACU,EAAX,CAAc/H,IAAI,CAACgI,SAAL,CAAeC,SAA7B,EAAwC,MAAM;AAC1C,oBAAId,KAAK,KAAK,CAAd,EAAiB;AACb,kBAAA,MAAI,CAAChG,YAAL,GAAoBkG,UAApB;;AACA,sBAAI,CAACS,SAAS,CAACT,UAAU,CAACa,IAAZ,CAAd,EAAiC;AAC7BJ,oBAAAA,SAAS,CAACT,UAAU,CAACa,IAAZ,CAAT,GAA6B,IAA7B,CAD6B,CAG7B;;AACA,wBAAMC,cAAc,GAAGvH,WAAW,CAAC,MAAI,CAACwH,YAAN,CAAlC;AACAD,oBAAAA,cAAc,CAACb,WAAf,CAA2BD,UAAU,CAACgB,QAAtC;AACAhB,oBAAAA,UAAU,CAACiB,MAAX,CAAkBd,QAAlB,CAA2BW,cAA3B;AAEA,wBAAMI,GAAG,GAAGnF,IAAI,CAACoF,KAAL,CAAWnB,UAAU,CAACgB,QAAX,CAAoBI,CAApB,GAAwB,EAAnC,CAAZ;;AAR6B,mDASD;AACxB,0BAAI5B,GAAC,KAAK0B,GAAV,EAAe;AACX,4BAAMpC,IAAI,GAAG,MAAI,CAACoB,SAAL,CAAemB,cAAf,gBAA0C7B,GAAC,GAAC,CAAF,GAAMO,CAAhD,EAAb;;AACA,4BAAMuB,UAAU,GAAG/H,WAAW,CAAC,MAAI,CAACgI,SAAN,CAA9B;AACAD,wBAAAA,UAAU,CAACrB,WAAX,CAAuBnB,IAAI,CAACkC,QAA5B;AACAlC,wBAAAA,IAAI,CAACmC,MAAL,CAAYd,QAAZ,CAAqBmB,UAArB;AAEAE,wBAAAA,UAAU,CAAC,MAAM;AACbF,0BAAAA,UAAU,CAACG,OAAX;AACH,yBAFS,EAEP,IAFO,CAAV;AAGH;AACJ,qBApB4B;;AAS7B,yBAAK,IAAIjC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,CAApB,EAAuBA,GAAC,EAAxB;AAAA;AAAA;;AAaA,wBAAMkC,GAAG,GAAG3F,IAAI,CAACoF,KAAL,CAAWnB,UAAU,CAACgB,QAAX,CAAoBW,CAApB,GAAwB,EAAnC,CAAZ;;AAtB6B,mDAuBD;AACxB,0BAAI5B,EAAC,KAAK2B,GAAV,EAAe;AACX,4BAAM5C,IAAI,GAAG,MAAI,CAACoB,SAAL,CAAemB,cAAf,gBAA0C7B,CAAC,GAAC,CAAF,GAAMO,EAAhD,EAAb;;AACA,4BAAMuB,UAAU,GAAG/H,WAAW,CAAC,MAAI,CAACgI,SAAN,CAA9B;AACAD,wBAAAA,UAAU,CAACrB,WAAX,CAAuBnB,IAAI,CAACkC,QAA5B;AACAlC,wBAAAA,IAAI,CAACmC,MAAL,CAAYd,QAAZ,CAAqBmB,UAArB;AAEAE,wBAAAA,UAAU,CAAC,MAAM;AACbF,0BAAAA,UAAU,CAACG,OAAX;AACH,yBAFS,EAEP,IAFO,CAAV;AAGH;AACJ,qBAlC4B;;AAuB7B,yBAAK,IAAI1B,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,CAApB,EAAuBA,EAAC,EAAxB;AAAA;AAAA;;AAaA,wBAAM6B,QAAQ,GAAG7F,IAAI,CAACoF,KAAL,CAAWD,GAAG,GAAG,CAAjB,IAAsB,CAAvC;AACA,wBAAMW,QAAQ,GAAG9F,IAAI,CAACoF,KAAL,CAAWO,GAAG,GAAG,CAAjB,IAAsB,CAAvC;;AACA,yBAAK,IAAIlC,GAAC,GAAGoC,QAAb,EAAuBpC,GAAC,GAAGoC,QAAQ,GAAG,CAAtC,EAAyCpC,GAAC,EAA1C,EAA8C;AAAA,qDACI;AAC1C,4BAAIA,GAAC,KAAK0B,GAAN,IAAanB,GAAC,KAAK2B,GAAvB,EAA4B;AACxB,8BAAM5C,IAAI,GAAG,MAAI,CAACoB,SAAL,CAAemB,cAAf,gBAA0C7B,GAAC,GAAC,CAAF,GAAMO,GAAhD,EAAb;;AACA,8BAAMuB,UAAU,GAAG/H,WAAW,CAAC,MAAI,CAACgI,SAAN,CAA9B;AACAD,0BAAAA,UAAU,CAACrB,WAAX,CAAuBnB,IAAI,CAACkC,QAA5B;AACAlC,0BAAAA,IAAI,CAACmC,MAAL,CAAYd,QAAZ,CAAqBmB,UAArB;AAEAE,0BAAAA,UAAU,CAAC,MAAM;AACbF,4BAAAA,UAAU,CAACG,OAAX;AACH,2BAFS,EAEP,IAFO,CAAV;AAGH;AACJ,uBAZyC;;AAC1C,2BAAK,IAAI1B,GAAC,GAAG8B,QAAb,EAAuB9B,GAAC,GAAG8B,QAAQ,GAAG,CAAtC,EAAyC9B,GAAC,EAA1C;AAAA;AAAA;AAYH;AAEJ;AACJ;AACJ,eA1DD;AA4DA,kBAAM+B,OAAO,GAAG,IAAInJ,IAAJ,CAAS,kBAAT,CAAhB;AACA,kBAAMoJ,UAAU,GAAGD,OAAO,CAACzB,YAAR,CAAqBxH,KAArB,CAAnB;AACAkJ,cAAAA,UAAU,CAACjG,MAAX,WAAyB0D,CAAC,GAAG,CAA7B;AACAuC,cAAAA,UAAU,CAACxB,KAAX,GAAmBxH,KAAK,CAACyH,KAAzB;AAEAuB,cAAAA,UAAU,CAACC,aAAX,GAA2BpJ,qBAAqB,CAACqJ,MAAjD;AACAH,cAAAA,OAAO,CAACb,MAAR,GAAiB,MAAI,CAACnC,IAAtB;AACAgD,cAAAA,OAAO,CAACd,QAAR,GAAmB,IAAIlI,IAAJ,CAAS0G,CAAC,GAAG,CAAJ,GAAQ,EAAR,GAAa,GAAtB,EAA2BzD,IAAI,CAACoF,KAAL,CAAW3B,CAAC,GAAG,CAAf,IAAoB,CAAC,EAAhD,EAAoD,CAApD,CAAnB;;AACA,cAAA,MAAI,CAAC0C,YAAL,CAAkB1E,IAAlB,CAAuBuE,UAAvB;;AACAD,cAAAA,OAAO,CAACpB,EAAR,CAAW/H,IAAI,CAACgI,SAAL,CAAeC,SAA1B,EAAqC,MAAM;AACvC,oBAAI,MAAI,CAAC9G,YAAT,EAAuB;AACnB,sBAAMqI,aAAa,GAAGC,QAAQ,CAACL,UAAU,CAACjG,MAAZ,CAA9B;;AACA,sBAAI,CAACuG,KAAK,CAACF,aAAD,CAAV,EAA2B;AACvB,oBAAA,MAAI,CAAChE,gBAAL,CAAsBhB,IAAtB;;AACA,wBAAMqC,GAAC,GAAGzD,IAAI,CAACoF,KAAL,CAAW,MAAI,CAACrH,YAAL,CAAkBkH,QAAlB,CAA2BI,CAA3B,GAA+B,EAA1C,CAAV;;AACA,wBAAMrB,GAAC,GAAGhE,IAAI,CAACoF,KAAL,CAAW,MAAI,CAACrH,YAAL,CAAkBkH,QAAlB,CAA2BW,CAA3B,GAA+B,EAA1C,CAAV;;AACA,wBAAMX,QAAQ,GAAGxB,GAAC,GAAG,CAAJ,GAAQO,GAAzB;AACA,wBAAMuC,aAAa,GAAG,MAAI,CAACtI,YAAL,CAAkBgH,QAAlB,CAAtB;AACA,wBAAMuB,SAAS,GAAGJ,aAAa,KAAKG,aAApC;AACAtH,oBAAAA,OAAO,CAACC,GAAR,CAAYsH,SAAZ;;AAEA,wBAAMC,gBAAgB,GAAG,MAAI,CAAC1I,YAAL,CAAkBuC,YAAlB,CAA+BxD,KAA/B,CAAzB;;AAEA,wBAAI,CAAC+G,SAAS,CAACJ,GAAD,CAAT,CAAaO,GAAb,EAAgBF,MAArB,EAA6B;AACzB,0BAAI0C,SAAJ,EAAe;AACXC,wBAAAA,gBAAgB,CAACjC,KAAjB,GAAyBxH,KAAK,CAAC0J,IAA/B;AACA9C,wBAAAA,QAAQ;AACRC,wBAAAA,SAAS,CAACJ,GAAD,CAAT,CAAaO,GAAb,EAAgBF,MAAhB,GAAyB,IAAzB;AACA7E,wBAAAA,OAAO,CAACC,GAAR,CAAY0E,QAAZ;;AAEA,4BAAIA,QAAQ,KAAK,CAAjB,EAAmB;AACf3E,0BAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,0BAAA,MAAI,CAACiD,aAAL,CAAmBf,IAAnB;;AACA,0BAAA,MAAI,CAACf,MAAL,CAAYC,YAAZ,CAAyBjD,WAAzB,EAAsCyE,KAAtC;;AACA,8BAAG,MAAI,CAAC3D,eAAL,IAAwB,GAA3B,EAA+B;AAC3B,4BAAA,MAAI,CAACE,WAAL,CAAiBoD,IAAjB,CAAsB,MAAI,CAACrD,WAA3B;;AACAsB,4BAAAA,YAAY,CAACgC,OAAb,CAAqB,UAArB,EAAiC9B,IAAI,CAAC+B,SAAL,CAAe,MAAI,CAACtD,WAApB,CAAjC;AACH;;AACD,8BAAG,MAAI,CAACF,eAAL,IAAwB,GAA3B,EAA+B;AAC3B,4BAAA,MAAI,CAACG,YAAL,CAAkBmD,IAAlB,CAAuB,MAAI,CAACrD,WAA5B;;AACAsB,4BAAAA,YAAY,CAACgC,OAAb,CAAqB,WAArB,EAAkC9B,IAAI,CAAC+B,SAAL,CAAe,MAAI,CAACrD,YAApB,CAAlC;AACH;;AACD,8BAAG,MAAI,CAACH,eAAL,IAAwB,GAA3B,EAA+B;AAC3B,4BAAA,MAAI,CAACI,YAAL,CAAkBkD,IAAlB,CAAuB,MAAI,CAACrD,WAA5B;;AACAsB,4BAAAA,YAAY,CAACgC,OAAb,CAAqB,WAArB,EAAkC9B,IAAI,CAAC+B,SAAL,CAAe,MAAI,CAACpD,YAApB,CAAlC;AACH;;AACD,0BAAA,MAAI,CAACoI,OAAL,CAAa5F,MAAb,GAAsB,IAAtB;;AAEA,0BAAA,MAAI,CAACrC,UAAL,CAAgBS,KAAhB,CACCyH,aADD,CACe,MAAI,CAACjI,OADpB,EAC6B;AAAEkI,4BAAAA,KAAK,EAAC,MAAI,CAACzI;AAAb,2BAD7B,EAECY,IAFD,CAEOO,IAAD,IAAU,CAAE,CAFlB,EAGCH,KAHD,CAGQI,KAAD,IAAWP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAHlB;AAIH;AACJ,uBA7BD,MA6BO;AACHiH,wBAAAA,gBAAgB,CAACjC,KAAjB,GAAyBxH,KAAK,CAAC8J,GAA/B;AACA,wBAAA,MAAI,CAAC5I,SAAL;AACA,wBAAA,MAAI,CAAC6I,WAAL,CAAiBhH,MAAjB,kBAAkC,MAAI,CAAC7B,SAAvC;AACA,wBAAA,MAAI,CAAC6I,WAAL,CAAiBhE,IAAjB,CAAsBhC,MAAtB,GAA+B,IAA/B;;AACA,4BAAI,MAAI,CAAC7C,SAAL,IAAkB,CAAtB,EAAyB;AACrBe,0BAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,0BAAA,MAAI,CAAC8H,QAAL,CAAcjG,MAAd,GAAuB,IAAvB;AACA,0BAAA,MAAI,CAACgG,WAAL,CAAiBhH,MAAjB;;AACA,0BAAA,MAAI,CAACiC,UAAL,CAAgBZ,IAAhB;;AACA,0BAAA,MAAI,CAACf,MAAL,CAAYC,YAAZ,CAAyBjD,WAAzB,EAAsCyE,KAAtC;;AAGA,0BAAA,MAAI,CAACpD,UAAL,CAAgBS,KAAhB,CACCyH,aADD,CACe,MAAI,CAACjI,OADpB,EAC6B;AAAEkI,4BAAAA,KAAK,EAAC,MAAI,CAACzI;AAAb,2BAD7B,EAECY,IAFD,CAEOO,IAAD,IAAU,CAAE,CAFlB,EAGCH,KAHD,CAGQI,KAAD,IAAWP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAHlB;AAIH;;AACD,4BAAG,MAAI,CAACtB,SAAL,IAAkB,CAArB,EAAuB;AACnB,0BAAA,MAAI,CAACA,SAAL;AACA,0BAAA,MAAI,CAAC6I,WAAL,CAAiBhH,MAAjB;AACH;AACJ;AACJ;;AAED0G,oBAAAA,gBAAgB,CAAC1G,MAAjB,GAA0BqG,aAAa,CAAC7B,QAAd,EAA1B;AACH;AACJ;AACJ,eAxED;AA0EH,aAlKuB;;AAExB,iBAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB;AAAA;AAAA;AAkKH,WAnLc;;AAef,eAAK,IAAIP,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,CAApB,EAAuBA,GAAC,EAAxB;AAAA;AAAA;AAqKH;;AA1ayC,O;;;;;;;;;;;;;;;;;;;;iBAelB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBA4DJ,I;;;;;;;iBAGA,I","sourcesContent":["import { _decorator, Component, Node, VerticalTextAlignment, Label, Vec3, Color, Sprite, Button, director, AudioClip, AudioSource, Slider, Prefab, instantiate, Vec2} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\nimport { GameView } from './GameView';\r\nimport GameClient from '@dattenlagiday/oc_gamecenter_sdk_pkg';\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n\r\n    // @property(Node)\r\n    // startGame: Node;\r\n    \r\n    @property(GameView)\r\n    gameView: GameView;\r\n\r\n    @property(Node)\r\n    boardNode: Node;\r\n\r\n    @property(Node)\r\n    boardEffectNode: Node;\r\n\r\n    @property(Label)\r\n    numberLabels: Label[] = [];\r\n\r\n    @property(Node)\r\n    gameOver: Node;\r\n\r\n    @property(Node)\r\n    levelPanel: Node;\r\n\r\n    @property(Button)\r\n    rePlay: Button;\r\n\r\n    @property(Button)\r\n    newGame: Button;\r\n\r\n    //LevelPanel\r\n    @property(Button)\r\n    easyLevel: Button;\r\n\r\n    @property(Button)\r\n    mediumLevel: Button;\r\n\r\n    @property(Button)\r\n    hardLevel: Button;\r\n\r\n    @property(Label)\r\n    playerFault: Label;\r\n\r\n    @property(Sprite)\r\n    bgNodeValue: Sprite;\r\n    \r\n    //Audio Game\r\n\r\n    @property(AudioClip)\r\n    volumeStart: AudioClip;\r\n\r\n    @property(AudioClip)\r\n    volumeSelectNode: AudioClip;\r\n\r\n    @property(AudioClip)\r\n    volumeLose: AudioClip;\r\n\r\n    @property(AudioClip)\r\n    volumeWinGame: AudioClip;\r\n\r\n    @property(Sprite)\r\n    bgMain: Sprite;\r\n\r\n    @property(Button)\r\n    settingVolumeAll: Slider;\r\n\r\n    @property(Node)\r\n    settingNode: Node;\r\n\r\n    @property(Slider)\r\n    settingVolumeBg: Slider;\r\n\r\n    @property(Slider)\r\n    settingVolumeEffect: Slider;\r\n\r\n    @property(Label)\r\n    timerLabel: Label = null;\r\n\r\n    @property(Label)\r\n    levelLabel: Label = null;\r\n\r\n    @property(Node)\r\n    winGame: Node;\r\n\r\n    @property(Label)\r\n    bestTime: Label;\r\n\r\n    @property(Label)\r\n    bestTimeLevle: Label;\r\n\r\n    @property(Prefab)\r\n    frameNode: Prefab;\r\n\r\n    @property(Prefab)\r\n    frameNodeNum: Prefab;\r\n\r\n    selectedNode: Node = null;\r\n    puzzleGame: number[] = [];\r\n    solutionGame: number[] = [];\r\n    redNumber: number = 0;\r\n    difficultyLevel: number;\r\n    timeElapsed: number = 0; \r\n    timeBestArr: number[] = [];\r\n    timeBestArr1: number[] = [];\r\n    timeBestArr2: number[] = [];\r\n    volumeBg: number[] = [];\r\n    volumeEffect: number[] = [];\r\n    gameClient:GameClient;\r\n    matchId:string\r\n\r\n        public async start():Promise<void> {\r\n            if(this.gameClient===undefined)\r\n            {\r\n            this.gameClient = new GameClient(\"642d35b6dc7fdb5a28069ce7\",\"1258a0fa-9b29-4162-8c27-73fa014545f7\");\r\n            await this.gameClient.initAsync()\r\n                .then(() => {console.log(this.gameClient.match)})\r\n                .catch((err) => console.log(err));\r\n            }\r\n            \r\n            await this.gameClient.match\r\n                .startMatch()\r\n                .then((data) => {this.matchId=data.matchId})\r\n                .catch((error) => console.log(error));\r\n\r\n            let bestscore=localStorage.getItem('bestTime'); \r\n            if(bestscore){\r\n                this.timeBestArr=JSON.parse(bestscore);\r\n                this.bestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr))\r\n            }\r\n            let bestscore1=localStorage.getItem('bestTime1');\r\n            if(bestscore1){\r\n                this.timeBestArr1=JSON.parse(bestscore1);\r\n                this.bestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1))\r\n            }\r\n            let bestscore2=localStorage.getItem('bestTime2');\r\n            if(bestscore2){\r\n                this.timeBestArr2=JSON.parse(bestscore2);\r\n                this.bestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2))\r\n            }\r\n\r\n            let saveVolumeBg = localStorage.getItem('volumeBg');\r\n            if(saveVolumeBg){\r\n                this.volumeBg=JSON.parse(saveVolumeBg);\r\n                this.bgMain.getComponent(AudioSource).volume = this.volumeBg[this.volumeBg.length - 1];\r\n                this.settingVolumeBg.progress = this.volumeBg[this.volumeBg.length - 1];\r\n            }\r\n            console.log(this.settingVolumeBg.progress)\r\n\r\n            let saveVolumeEffect = localStorage.getItem('volumeEffect');\r\n            if(saveVolumeEffect){\r\n                this.volumeEffect=JSON.parse(saveVolumeEffect);\r\n                this.settingVolumeEffect.progress= this.volumeEffect[this.volumeEffect.length - 1];\r\n            }\r\n    }\r\n    onLoad() {\r\n        this.levelPanel.active = true;\r\n        //this.createPuzzleBoard();\r\n        console.log(this.puzzleGame)\r\n        console.log(this.solutionGame)\r\n    }\r\n    startGamePlayer(){\r\n        this.gameView.StartGame.active = false;\r\n        this.volumeStart.play();\r\n    }\r\n    updateTimer() {\r\n        this.timeElapsed++;\r\n        this.timerLabel.string = `Thời gian : ${this.timeElapsed} giây`;\r\n    }\r\n    volumeGameSetting(){    \r\n        this.bgMain.getComponent(AudioSource).volume = this.settingVolumeBg.progress;\r\n        const progressBg = this.settingVolumeBg.progress;\r\n        this.volumeBg.push(progressBg);\r\n        localStorage.setItem('volumeBg', JSON.stringify(this.volumeBg));\r\n    }\r\n    displayVolumeSetting(){\r\n        this.settingNode.active = true;\r\n        director.pause();\r\n    }\r\n    volumeGameEffect(){\r\n        this.volumeLose.getVolume();\r\n        this.volumeLose.setVolume(this.settingVolumeEffect.progress);\r\n        this.volumeWinGame.getVolume();\r\n        this.volumeWinGame.setVolume(this.settingVolumeEffect.progress);\r\n        this.volumeSelectNode.getVolume();\r\n        this.volumeSelectNode.setVolume(this.settingVolumeEffect.progress);\r\n        this.volumeStart.getVolume();\r\n        this.volumeStart.setVolume(this.settingVolumeEffect.progress);\r\n\r\n        const progressEffect = this.settingVolumeEffect.progress;\r\n        this.volumeEffect.push(progressEffect);\r\n        localStorage.setItem('volumeEffect', JSON.stringify(this.volumeEffect));\r\n    }\r\n    rePlayGame(){\r\n        director.loadScene(\"MainGame\");\r\n    }\r\n    continueGame(){\r\n        director.resume();\r\n        this.settingNode.active = false;\r\n    }\r\n    displayLevelPanel(){\r\n        this.levelPanel.active = true;\r\n    }\r\n    \r\n    update(){\r\n        if(this.difficultyLevel == 0.1){\r\n            this.bestTimeLevle.string = 'Độ Khó: DỄ'\r\n            this.bestTime.string = 'Thời gian nhanh nhất : ' +(Math.min(...this.timeBestArr));\r\n        } else if(this.difficultyLevel == 0.2){\r\n            this.bestTimeLevle.string = 'Độ Khó: TRUNG BÌNH'\r\n            this.bestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1));\r\n        } else if(this.difficultyLevel == 0.3){\r\n            this.bestTimeLevle.string = 'Độ Khó: KHÓ'\r\n            this.bestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2));\r\n\r\n        }\r\n    }\r\n\r\n    //levelFunction\r\n    easyLevelGame() {\r\n        this.difficultyLevel = 0.1;\r\n        this.createPuzzleBoard();\r\n        this.levelPanel.active = false;\r\n        this.bgNodeValue.node.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.levelLabel.string = \"Độ khó : DỄ\"\r\n        this.newGame.node.active = true;\r\n    }\r\n    mediumLevelGame() {\r\n        this.difficultyLevel = 0.2;\r\n        this.createPuzzleBoard();\r\n        this.levelPanel.active = false;\r\n        this.bgNodeValue.node.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.levelLabel.string = \"Độ khó : TRUNG BÌNH\"\r\n        this.newGame.node.active = true;\r\n    }\r\n    hardLevelGame() {\r\n        this.difficultyLevel = 0.3;\r\n        this.createPuzzleBoard();\r\n        this.levelPanel.active = false;\r\n        this.bgNodeValue.node.active = true;\r\n        this.schedule(this.updateTimer, 1); \r\n        this.levelLabel.string = \"Độ khó : KHÓ\"\r\n        this.newGame.node.active = true;\r\n    }\r\n\r\n    currentPos: Vec2 = null;\r\n    createPuzzleBoard(){\r\n\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(this.difficultyLevel);\r\n\r\n        for (let i = 0; i < boardData.puzzle.length; i++) {\r\n            this.puzzleGame.push(boardData.puzzle[i] + 1);\r\n        }\r\n        for (let i = 0; i < boardData.solution.length; i++) {\r\n            this.solutionGame.push(boardData.solution[i] + 1);\r\n        }\r\n\r\n        let emtyNode = 0;\r\n        const nodeCheck = [];\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            nodeCheck.push([]);\r\n            for (let j = 0; j < 9; j++) {\r\n                nodeCheck[i].push({ filled: false });\r\n                let value = this.puzzleGame[i*9 + j];\r\n                const nodeSudoku = new Node(`ValueGame${i*9+j}`);\r\n\r\n                nodeSudoku.setPosition(i * 55, j * 55);\r\n                this.boardNode.addChild(nodeSudoku);\r\n\r\n                const labelBlock = nodeSudoku.addComponent(Label);\r\n                labelBlock.string = value === 0 ? \"    \" : value.toString();\r\n                labelBlock.color = Color.BLACK;\r\n\r\n                if (value === 0) {\r\n                    emtyNode++;\r\n                }\r\n\r\n                const nodeState = {};\r\n                nodeSudoku.on(Node.EventType.TOUCH_END, () => {\r\n                    if (value === 0) {\r\n                        this.selectedNode = nodeSudoku;\r\n                        if (!nodeState[nodeSudoku.name]) {\r\n                            nodeState[nodeSudoku.name] = true;\r\n                \r\n                            //Instantiate the prefab\r\n                            const prefabInstance = instantiate(this.frameNodeNum);\r\n                            prefabInstance.setPosition(nodeSudoku.position);\r\n                            nodeSudoku.parent.addChild(prefabInstance);\r\n                \r\n                            const row = Math.floor(nodeSudoku.position.x / 55);\r\n                            for (let i = 0; i < 9; i++) {\r\n                                if (i !== row) {\r\n                                    const node = this.boardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n\r\n                                    setTimeout(() => {\r\n                                        nodePrefab.destroy();\r\n                                    }, 1000);\r\n                                }\r\n                            }\r\n                \r\n                            const col = Math.floor(nodeSudoku.position.y / 55);\r\n                            for (let j = 0; j < 9; j++) {\r\n                                if (j !== col) {\r\n                                    const node = this.boardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n\r\n                                    setTimeout(() => {\r\n                                        nodePrefab.destroy();\r\n                                    }, 1000);\r\n                                }\r\n                            }\r\n                \r\n                            const rowStart = Math.floor(row / 3) * 3;\r\n                            const colStart = Math.floor(col / 3) * 3;\r\n                            for (let i = rowStart; i < rowStart + 3; i++) {\r\n                                for (let j = colStart; j < colStart + 3; j++) {\r\n                                    if (i !== row && j !== col) {\r\n                                        const node = this.boardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                        const nodePrefab = instantiate(this.frameNode);\r\n                                        nodePrefab.setPosition(node.position);\r\n                                        node.parent.addChild(nodePrefab);\r\n\r\n                                        setTimeout(() => {\r\n                                            nodePrefab.destroy();\r\n                                        }, 1000);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                });\r\n                \r\n                const nodeNum = new Node(\"NumberValueLabel\");\r\n                const labelValue = nodeNum.addComponent(Label);\r\n                labelValue.string = `  ${i + 1}  `;\r\n                labelValue.color = Color.BLACK;\r\n\r\n                labelValue.verticalAlign = VerticalTextAlignment.CENTER;\r\n                nodeNum.parent = this.node;\r\n                nodeNum.position = new Vec3(i % 3 * 70 + 210, Math.floor(i / 3) * -60, 0);\r\n                this.numberLabels.push(labelValue);\r\n                nodeNum.on(Node.EventType.TOUCH_END, () => {\r\n                    if (this.selectedNode) {\r\n                        const selectedValue = parseInt(labelValue.string);\r\n                        if (!isNaN(selectedValue)) {\r\n                            this.volumeSelectNode.play();\r\n                            const i = Math.floor(this.selectedNode.position.x / 55);\r\n                            const j = Math.floor(this.selectedNode.position.y / 55);\r\n                            const position = i * 9 + j;\r\n                            const solutionValue = this.solutionGame[position];\r\n                            const isCorrect = selectedValue === solutionValue;\r\n                            console.log(isCorrect);\r\n                        \r\n                            const labelBlockSelect = this.selectedNode.getComponent(Label);\r\n\r\n                            if (!nodeCheck[i][j].filled) {\r\n                                if (isCorrect) {\r\n                                    labelBlockSelect.color = Color.BLUE;\r\n                                    emtyNode--;\r\n                                    nodeCheck[i][j].filled = true;\r\n                                    console.log(emtyNode);\r\n                                \r\n                                    if (emtyNode === 0){\r\n                                        console.log(\"winner\");\r\n                                        this.volumeWinGame.play();\r\n                                        this.bgMain.getComponent(AudioSource).pause();      \r\n                                        if(this.difficultyLevel == 0.1){\r\n                                            this.timeBestArr.push(this.timeElapsed);\r\n                                            localStorage.setItem('bestTime', JSON.stringify(this.timeBestArr));\r\n                                        }\r\n                                        if(this.difficultyLevel == 0.2){\r\n                                            this.timeBestArr1.push(this.timeElapsed);\r\n                                            localStorage.setItem('bestTime1', JSON.stringify(this.timeBestArr1));\r\n                                        }   \r\n                                        if(this.difficultyLevel == 0.3){\r\n                                            this.timeBestArr2.push(this.timeElapsed);\r\n                                            localStorage.setItem('bestTime2', JSON.stringify(this.timeBestArr2));\r\n                                        }\r\n                                        this.winGame.active = true;\r\n\r\n                                        this.gameClient.match\r\n                                        .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                        .then((data) => {})\r\n                                        .catch((error) => console.log(error));                   \r\n                                    }         \r\n                                } else {\r\n                                    labelBlockSelect.color = Color.RED;\r\n                                    this.redNumber++;\r\n                                    this.playerFault.string = `Lỗi: ${this.redNumber}/3`\r\n                                    this.playerFault.node.active = true;\r\n                                    if (this.redNumber == 4) {\r\n                                        console.log(\"thua rồi nhé !!!\");\r\n                                        this.gameOver.active = true;\r\n                                        this.playerFault.string = `Lỗi 3/3`;\r\n                                        this.volumeLose.play();\r\n                                        this.bgMain.getComponent(AudioSource).pause();\r\n                                        \r\n                                        \r\n                                        this.gameClient.match\r\n                                        .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                        .then((data) => {})\r\n                                        .catch((error) => console.log(error));\r\n                                    }\r\n                                    if(this.redNumber == 5){\r\n                                        this.redNumber--;\r\n                                        this.playerFault.string = `Lỗi 3/3`; \r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            labelBlockSelect.string = selectedValue.toString();\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n    }   \r\n}\r\n\r\n\r\nexport function runScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\nexport function loadScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\n\r\n"]}