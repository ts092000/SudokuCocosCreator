{"version":3,"sources":["file:///D:/gameCocos/SudokuMain2/assets/Script/GameController.ts"],"names":["_decorator","Component","Node","VerticalTextAlignment","Label","Vec3","Color","SudokuCreator","ccclass","property","GameController","onLoad","createPuzzleBoard","sudokuCreator","childMatrixWidth","boardData","createSudoku","solution","puzzleGame","solutionGame","i","puzzle","length","push","console","log","value","j","node","setPosition","boardNode","addChild","labelBlock","addComponent","string","toString","on","EventType","TOUCH_END","selectedNumber","numberLabels","findIndex","label","color","equals","JSON","stringify","verticalAlign","CENTER","parent","position","Math","floor","l"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, VerticalTextAlignment, Label, Vec3, Color } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n    @property(Node)\r\n    boardNode: Node;\r\n    @property(Label)\r\n    numberLabels: Label[] = [];\r\n\r\n    onLoad() {\r\n        this.createPuzzleBoard();\r\n    }\r\n\r\n\r\n    createPuzzleBoard(){\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(0.2);\r\n        let solution = boardData.solution;\r\n        let puzzleGame: number[] = [];\r\n        let solutionGame: number[] = [];\r\n        \r\n\r\n        for (let i = 0; i < boardData.puzzle.length; i++) {\r\n            puzzleGame.push(boardData.puzzle[i] + 1);\r\n        }\r\n        for (let i = 0; i < boardData.solution.length; i++) {\r\n            solutionGame.push(boardData.solution[i] + 1);\r\n        }\r\n\r\n        console.log(puzzleGame);\r\n        console.log(solutionGame);\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            for (let j = 0; j < 9; j++) {\r\n                const value = puzzleGame[i*9 + j];\r\n                const node = new Node(\"ValueGame\");\r\n                node.setPosition(i * 55, j * 55);\r\n                this.boardNode.addChild(node);\r\n                \r\n                const labelBlock = node.addComponent(Label);\r\n                labelBlock.string = value === 0 ? \"-\" : value.toString();\r\n                labelBlock.node.on(Node.EventType.TOUCH_END, () => {\r\n                    if (value === 0) {\r\n                        // Get the number selected from numberLabels\r\n                        const selectedNumber = this.numberLabels.findIndex(label => label.node.color.equals(new Color(255, 0, 0, 255)));\r\n                        if (selectedNumber !== -1) {\r\n                            // Update the value of the Label and puzzleGame\r\n                            labelBlock.string = `${selectedNumber + 1}`;\r\n                            puzzleGame[i * 9 + j] = selectedNumber + 1;\r\n                            // Check if the game is solved\r\n                            if (JSON.stringify(puzzleGame) === JSON.stringify(solutionGame)) {\r\n                                console.log(\"Game solved!\");\r\n                                // Do something when game is solved\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            const node = new Node(\"NumberValueLabel\");\r\n            const label = node.addComponent(Label);\r\n            label.string = `${i + 1}`;\r\n            label.verticalAlign = VerticalTextAlignment.CENTER;\r\n            node.parent = this.node;\r\n            node.position = new Vec3(i % 3 * 100 + 180, Math.floor(i / 3) * -110, 0);\r\n            this.numberLabels.push(label);\r\n            node.on(Node.EventType.TOUCH_END, () => {\r\n                console.log(`Value ${label.string}`);\r\n                for (const l of this.numberLabels) {\r\n                    l.node.color = new Color(255, 255, 255, 255);\r\n                }\r\n                label.node.color = new Color(255, 0, 0, 255);\r\n            });\r\n        }\r\n\r\n    }   \r\n}\r\n\r\n"]}