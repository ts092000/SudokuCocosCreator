{"version":3,"sources":["file:///D:/gameCocos/SudokuMain2/assets/Script/GameController.ts"],"names":["_decorator","Component","Node","VerticalTextAlignment","Label","Vec3","Color","SudokuCreator","ccclass","property","GameController","onLoad","createPuzzleBoard","sudokuCreator","childMatrixWidth","boardData","createSudoku","solution","puzzleGame","solutionGame","i","puzzle","length","push","console","log","j","value","nodeSudoku","setPosition","boardNode","addChild","labelBlock","addComponent","string","toString","color","nodeNum","label","verticalAlign","CENTER","parent","node","position","Math","floor","numberLabels","on","EventType","TOUCH_END"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, VerticalTextAlignment, Label, Vec3, Color } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n    @property(Node)\r\n    boardNode: Node;\r\n    @property(Label)\r\n    numberLabels: Label[] = [];\r\n\r\n    onLoad() {\r\n        this.createPuzzleBoard();\r\n    }\r\n\r\n\r\n    createPuzzleBoard(){\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(0.2);\r\n        let solution = boardData.solution;\r\n        let puzzleGame: number[] = [];\r\n        let solutionGame: number[] = [];\r\n        \r\n\r\n        for (let i = 0; i < boardData.puzzle.length; i++) {\r\n            puzzleGame.push(boardData.puzzle[i] + 1);\r\n        }\r\n        for (let i = 0; i < boardData.solution.length; i++) {\r\n            solutionGame.push(boardData.solution[i] + 1);\r\n        }\r\n\r\n        console.log(puzzleGame);\r\n        console.log(solutionGame);\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            for (let j = 0; j < 9; j++) {\r\n                const value = puzzleGame[i*9 + j];\r\n                const nodeSudoku = new Node(\"ValueGame\");\r\n                nodeSudoku.setPosition(i * 55, j * 55);\r\n                this.boardNode.addChild(nodeSudoku);\r\n                \r\n                const labelBlock = nodeSudoku.addComponent(Label);\r\n                labelBlock.string = value === 0 ? \"-\" : value.toString();\r\n                labelBlock.color = new Color(0, 255, 0);\r\n                \r\n\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            const nodeNum = new Node(\"NumberValueLabel\");\r\n            const label = nodeNum.addComponent(Label);\r\n            label.string = `${i + 1}`;\r\n            label.verticalAlign = VerticalTextAlignment.CENTER;\r\n            nodeNum.parent = this.node;\r\n            nodeNum.position = new Vec3(i % 3 * 100 + 180, Math.floor(i / 3) * -110, 0);\r\n            this.numberLabels.push(label);\r\n            nodeNum.on(Node.EventType.TOUCH_END, () => {\r\n                console.log(`Value ${label.string}`);\r\n            });\r\n        }\r\n\r\n    }   \r\n}\r\n\r\n"]}