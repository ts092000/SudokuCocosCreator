{"version":3,"sources":["file:///C:/Users/ADMIN/OneDrive/M%C3%A1y%20t%C3%ADnh/SudokuMain2/SudokuMain2/assets/Script/GameController.ts"],"names":["runScene","arg0","Error","loadScene","_decorator","Component","Node","VerticalTextAlignment","Label","Vec3","Color","director","AudioClip","Prefab","instantiate","find","SudokuCreator","GameView","StoredPersistNode","ccclass","property","GameController","type","selectedNode","puzzleGame","solutionGame","redNumber","difficultyLevel","timeElapsed","timeBestArr","timeBestArr1","timeBestArr2","volumeBg","volumeEffect","nodePositionArray","frameNodeNumArray","frameNodePositionArray","frameNodeArray","frameNodeArrayLength","gameClient","AudioBg","matchId","currentPos","start","_this","console","log","gameView","BoardNode","parameters","gameClientParams","getComponent","play","match","startMatch","then","data","catch","error","bestscore","localStorage","getItem","JSON","parse","BestTime","string","Math","min","bestscore1","bestscore2","onLoad","LevelPanel","active","BgBoardNode","updateTimer","TimeLabel","rePlayGame","displayLevelPanel","update","BestTimeLevel","easyLevelGame","createPuzzleBoard","bgNodeValue","schedule","LevelLabel","NewGameBtn","node","PlayerFault","mediumLevelGame","hardLevelGame","sudokuCreator","childMatrixWidth","boardData","createSudoku","i","puzzle","length","push","solution","emtyNode","nodeCheck","filled","value","j","nodeSudoku","setPosition","addChild","labelBlock","addComponent","toString","color","BLACK","nodeState","on","EventType","TOUCH_END","name","prefabInstance","frameNodeNum","position","parent","destroy","row","floor","x","getChildByName","nodePrefab","frameNode","col","y","rowStart","colStart","nodeNum","labelValue","verticalAlign","CENTER","numberLabels","selectedValue","parseInt","isNaN","volumeSelectNode","solutionValue","isCorrect","labelBlockSelect","BLUE","unschedule","TimeFinish","volumeWinGame","setItem","stringify","WinGame","completeMatch","score","RED","GameOver","volumeLose"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, VerticalTextAlignment, Label, Vec3, Color, Sprite, Button, director, AudioClip, AudioSource, Slider, Prefab, instantiate, Vec2, find} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\nimport { GameView } from './GameView';\r\nimport GameClient from '@dattenlagiday/oc_gamecenter_sdk_pkg';\r\nimport { StoredPersistNode } from './StoredPersistNode';\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n\r\n    // @property(Node)\r\n    // startGame: Node;\r\n    \r\n    @property({type:GameView})\r\n    gameView: GameView;\r\n\r\n    @property({type:Label})\r\n    numberLabels: Label[] = [];\r\n\r\n    //LevelPanel\r\n\r\n    @property({type:Node})\r\n    bgNodeValue: Node;\r\n    \r\n    //Audio Game\r\n\r\n    @property(AudioClip)\r\n    volumeStart: AudioClip;\r\n\r\n    @property(AudioClip)\r\n    volumeSelectNode: AudioClip;\r\n\r\n    @property(AudioClip)\r\n    volumeLose: AudioClip;\r\n\r\n    @property(AudioClip)\r\n    volumeWinGame: AudioClip;\r\n\r\n    @property(Prefab)\r\n    frameNode: Prefab;\r\n\r\n    @property(Prefab)\r\n    frameNodeNum: Prefab;\r\n\r\n    selectedNode: Node = null;\r\n    puzzleGame: number[] = [];\r\n    solutionGame: number[] = [];\r\n    redNumber: number = 0;\r\n    difficultyLevel: number;\r\n    timeElapsed: number = 0; \r\n    timeBestArr: number[] = [];\r\n    timeBestArr1: number[] = [];\r\n    timeBestArr2: number[] = [];\r\n    volumeBg: number[] = [];\r\n    volumeEffect: number[] = [];\r\n\r\n    nodePositionArray: Vec3[] = [];\r\n    frameNodeNumArray: Node[] = [];\r\n\r\n    frameNodePositionArray: Vec3[] = [];\r\n    frameNodeArray: Node[] = [];\r\n    frameNodeArrayLength: number;\r\n\r\n    public gameClient;\r\n    public AudioBg: AudioSource;\r\n    matchId:string\r\n\r\n    public async start():Promise<void> {\r\n        let _this = this;\r\n        console.log(this.gameView.BoardNode);\r\n        console.log(this.gameClient);\r\n\r\n        let parameters = find(\"GameClient\");\r\n        let gameClientParams = parameters.getComponent(StoredPersistNode);\r\n            \r\n        this.gameClient = gameClientParams.gameClient;\r\n        this.AudioBg = gameClientParams.AudioBg;\r\n\r\n        console.log(this.AudioBg);\r\n        this.AudioBg.play();\r\n        \r\n        await gameClientParams.gameClient.match\r\n            .startMatch()\r\n            .then((data) => {_this.matchId=data.matchId})\r\n            .catch((error) => console.log(error));\r\n\r\n        let bestscore=localStorage.getItem('bestTime'); \r\n        if(bestscore){\r\n            this.timeBestArr=JSON.parse(bestscore);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr))\r\n        }\r\n\r\n        let bestscore1=localStorage.getItem('bestTime1');\r\n        if(bestscore1){\r\n            this.timeBestArr1=JSON.parse(bestscore1);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1))\r\n        }\r\n\r\n        let bestscore2=localStorage.getItem('bestTime2');\r\n        if(bestscore2){\r\n            this.timeBestArr2=JSON.parse(bestscore2);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2))\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n        this.gameView.LevelPanel.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n        //this.createPuzzleBoard();\r\n        console.log(this.puzzleGame)\r\n        console.log(this.solutionGame)\r\n    }\r\n\r\n    updateTimer() {\r\n        this.timeElapsed++;\r\n        this.gameView.TimeLabel.string = `Thời gian : ${this.timeElapsed} giây`;\r\n    }\r\n\r\n    rePlayGame(){\r\n        director.loadScene(\"MainGame\");\r\n    }\r\n\r\n    displayLevelPanel(){\r\n        this.gameView.LevelPanel.active = true;\r\n    }\r\n    \r\n    update(){\r\n        if(this.difficultyLevel == 0.2){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: DỄ'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất : ' +(Math.min(...this.timeBestArr));\r\n        } else if(this.difficultyLevel == 0.5){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: TRUNG BÌNH'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1));\r\n        } else if(this.difficultyLevel == 0.8){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: KHÓ'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2));\r\n        }\r\n    }\r\n\r\n    //levelFunction\r\n    easyLevelGame() {\r\n        this.difficultyLevel = 0.2;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.gameView.LevelLabel.string = \"Độ khó : DỄ\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n        this.gameView.PlayerFault.node.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n    }\r\n\r\n    mediumLevelGame() {\r\n        this.difficultyLevel = 0.5;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.gameView.LevelLabel.string = \"Độ khó : TRUNG BÌNH\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n        this.gameView.PlayerFault.node.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n    }\r\n\r\n    hardLevelGame() {\r\n        this.difficultyLevel = 0.8;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.active = true;\r\n        this.schedule(this.updateTimer, 1); \r\n        this.gameView.LevelLabel.string = \"Độ khó : KHÓ\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n        this.gameView.PlayerFault.node.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n    }\r\n\r\n    currentPos: Vec2 = null;\r\n    createPuzzleBoard(){\r\n        this.frameNodeArrayLength = 0;\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(this.difficultyLevel);\r\n\r\n        for (let i = 0; i < boardData.puzzle.length; i++) {\r\n            this.puzzleGame.push(boardData.puzzle[i] + 1);\r\n        }\r\n        for (let i = 0; i < boardData.solution.length; i++) {\r\n            this.solutionGame.push(boardData.solution[i] + 1);\r\n        }\r\n\r\n        let emtyNode = 0;\r\n        const nodeCheck = [];\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            nodeCheck.push([]);\r\n            for (let j = 0; j < 9; j++) {\r\n                nodeCheck[i].push({ filled: false });\r\n                let value = this.puzzleGame[i*9 + j];\r\n                const nodeSudoku = new Node(`ValueGame${i*9+j}`);\r\n\r\n                nodeSudoku.setPosition(i * 55, j * 55);\r\n                this.gameView.BoardNode.addChild(nodeSudoku);\r\n\r\n                const labelBlock = nodeSudoku.addComponent(Label);\r\n                labelBlock.string = value === 0 ? \"    \" : value.toString();\r\n                labelBlock.color = Color.BLACK;\r\n\r\n                if (value === 0) {\r\n                    emtyNode++;\r\n                }\r\n\r\n                const nodeState = {};\r\n                nodeSudoku.on(Node.EventType.TOUCH_END, () => {\r\n                    if (value === 0) {\r\n                        this.selectedNode = nodeSudoku;\r\n                        if (!nodeState[nodeSudoku.name]) {\r\n                            // nodeState[nodeSudoku.name] = true;\r\n                \r\n                            //Instantiate the prefab\r\n                            const prefabInstance = instantiate(this.frameNodeNum);\r\n                            prefabInstance.setPosition(nodeSudoku.position);\r\n                            nodeSudoku.parent.addChild(prefabInstance);\r\n                            this.nodePositionArray.push(prefabInstance.position);\r\n                            this.frameNodeNumArray.push(prefabInstance);\r\n                            if(this.nodePositionArray[this.nodePositionArray.length - 2] != prefabInstance.position) {\r\n                                if (this.frameNodeNumArray.length > 1) {\r\n                                    this.frameNodeNumArray[this.frameNodeNumArray.length - 2].destroy();\r\n                                }\r\n                            }\r\n                \r\n                            const row = Math.floor(nodeSudoku.position.x / 55);\r\n                            for (let i = 0; i < 9; i++) {\r\n                                if (i !== row) {\r\n                                    const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n                                    \r\n                                    this.frameNodeArray.push(nodePrefab);\r\n\r\n                                    console.log(this.frameNodeArray);\r\n                                    if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                        for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                            this.frameNodeArrayLength++;\r\n                                            console.log(this.frameNodeArrayLength);\r\n                                            console.log(this.frameNodeArray.length);\r\n                                            this.frameNodeArray[i - 1].destroy();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                \r\n                            const col = Math.floor(nodeSudoku.position.y / 55);\r\n                            for (let j = 0; j < 9; j++) {\r\n                                if (j !== col) {\r\n                                    const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n\r\n                                    this.frameNodeArray.push(nodePrefab);\r\n\r\n                                    console.log(this.frameNodeArray);\r\n                                    if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                        for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                            this.frameNodeArrayLength++;\r\n                                            console.log(this.frameNodeArrayLength);\r\n                                            console.log(this.frameNodeArray.length);\r\n                                            this.frameNodeArray[i - 1].destroy();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                \r\n                            const rowStart = Math.floor(row / 3) * 3;\r\n                            const colStart = Math.floor(col / 3) * 3;\r\n                            for (let i = rowStart; i < rowStart + 3; i++) {\r\n                                for (let j = colStart; j < colStart + 3; j++) {\r\n                                    if (i !== row && j !== col) {\r\n                                        const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                        const nodePrefab = instantiate(this.frameNode);\r\n                                        nodePrefab.setPosition(node.position);\r\n                                        node.parent.addChild(nodePrefab);\r\n\r\n                                        this.frameNodeArray.push(nodePrefab);\r\n\r\n                                        console.log(this.frameNodeArray);\r\n                                        if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                            for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                                this.frameNodeArrayLength++;\r\n                                                console.log(this.frameNodeArrayLength);\r\n                                                console.log(this.frameNodeArray.length);\r\n                                                this.frameNodeArray[i - 1].destroy();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                });\r\n                \r\n            }\r\n            const nodeNum = new Node(\"NumberValueLabel\");\r\n            const labelValue = nodeNum.addComponent(Label);\r\n            labelValue.string = `  ${i + 1}  `;\r\n            labelValue.color = Color.BLACK;\r\n\r\n            labelValue.verticalAlign = VerticalTextAlignment.CENTER;\r\n            nodeNum.parent = this.node;\r\n            nodeNum.position = new Vec3(i % 3 * 70 + 210, Math.floor(i / 3) * -60, 0);\r\n            this.numberLabels.push(labelValue);\r\n            nodeNum.on(Node.EventType.TOUCH_END, () => {\r\n                if (this.selectedNode) {\r\n                    const selectedValue = parseInt(labelValue.string);\r\n                    if (!isNaN(selectedValue)) {\r\n                        this.volumeSelectNode.play();\r\n                        const i = Math.floor(this.selectedNode.position.x / 55);\r\n                        const j = Math.floor(this.selectedNode.position.y / 55);\r\n                        const position = i * 9 + j;\r\n                        const solutionValue = this.solutionGame[position];\r\n                        const isCorrect = selectedValue === solutionValue;\r\n                        console.log(isCorrect);\r\n                    \r\n                        const labelBlockSelect = this.selectedNode.getComponent(Label);\r\n\r\n                        console.log(nodeCheck[i][j].filled);\r\n                        if (!nodeCheck[i][j].filled) {\r\n                            if (isCorrect == true) {\r\n                                console.log(isCorrect);\r\n                                labelBlockSelect.color = Color.BLUE;\r\n                                emtyNode--;\r\n                                nodeCheck[i][j].filled = true;\r\n                                console.log(emtyNode);\r\n                            \r\n                                if (emtyNode === 0){\r\n                                    console.log(\"winner\");\r\n                                    this.unschedule(this.updateTimer);\r\n                                    this.gameView.TimeFinish.string = this.timeElapsed.toString() + \" giây\";\r\n                                    this.volumeWinGame.play();\r\n                                    // this.gameView.BgMain.getComponent(AudioSource).pause();      \r\n                                    if(this.difficultyLevel == 0.2){\r\n                                        this.timeBestArr.push(this.timeElapsed);\r\n                                        localStorage.setItem('bestTime', JSON.stringify(this.timeBestArr));\r\n                                    }\r\n                                    if(this.difficultyLevel == 0.5){\r\n                                        this.timeBestArr1.push(this.timeElapsed);\r\n                                        localStorage.setItem('bestTime1', JSON.stringify(this.timeBestArr1));\r\n                                    }   \r\n                                    if(this.difficultyLevel == 0.8){\r\n                                        this.timeBestArr2.push(this.timeElapsed);\r\n                                        localStorage.setItem('bestTime2', JSON.stringify(this.timeBestArr2));\r\n                                    }\r\n                                    this.gameView.WinGame.active = true;\r\n\r\n                                    this.gameClient.match\r\n                                    .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                    .then((data) => {})\r\n                                    .catch((error) => console.log(error));                   \r\n                                }         \r\n                            } \r\n                            else if (isCorrect == false) {\r\n                                console.log(isCorrect);\r\n                                labelBlockSelect.color = Color.RED;\r\n                                this.redNumber++;\r\n                                this.gameView.PlayerFault.string = `Lỗi: ${this.redNumber}/3`\r\n                                this.gameView.PlayerFault.node.active = true;\r\n                                if (this.redNumber == 4) {\r\n                                    console.log(\"thua rồi nhé !!!\");\r\n                                    this.gameView.BgBoardNode.active = false;\r\n                                    this.gameView.BoardNode.active = false;\r\n                                    this.gameView.GameOver.active = true;\r\n                                    this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                    this.gameView.NewGameBtn.node.active = false;\r\n                                    this.unschedule(this.updateTimer);\r\n                                    this.volumeLose.play();\r\n                                    // this.gameView.BgMain.getComponent(AudioSource).pause();\r\n                                    \r\n                                    this.gameClient.match\r\n                                    .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                    .then((data) => {})\r\n                                    .catch((error) => console.log(error));\r\n                                }\r\n                                if(this.redNumber == 5){\r\n                                    this.redNumber--;\r\n                                    this.gameView.BgBoardNode.active = false;\r\n                                    this.gameView.BoardNode.active = false;\r\n                                    this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                    this.gameView.NewGameBtn.node.active = false;\r\n                                    this.unschedule(this.updateTimer);\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (nodeCheck[i][j].filled && isCorrect == false) {\r\n                            console.log(isCorrect);\r\n                            labelBlockSelect.color = Color.RED;\r\n                            this.redNumber++;\r\n                            this.gameView.PlayerFault.string = `Lỗi: ${this.redNumber}/3`\r\n                            this.gameView.PlayerFault.node.active = true;\r\n                            if (this.redNumber == 4) {\r\n                                console.log(\"thua rồi nhé !!!\");\r\n                                this.gameView.GameOver.active = true;\r\n                                this.gameView.BgBoardNode.active = false;\r\n                                this.gameView.BoardNode.active = false;\r\n                                this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                this.volumeLose.play();\r\n                                this.unschedule(this.updateTimer);\r\n                                // this.gameView.BgMain.getComponent(AudioSource).pause();\r\n                                this.gameView.NewGameBtn.node.active = false;\r\n                                \r\n                                this.gameClient.match\r\n                                .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                .then((data) => {})\r\n                                .catch((error) => console.log(error));\r\n                            }\r\n                            if(this.redNumber == 5){\r\n                                this.redNumber--;\r\n                                this.gameView.BgBoardNode.active = false;\r\n                                this.gameView.BoardNode.active = false;\r\n                                this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                this.gameView.NewGameBtn.node.active = false;\r\n                                this.unschedule(this.updateTimer);\r\n                            }\r\n                        }\r\n\r\n                        else if (nodeCheck[i][j].filled && isCorrect == true) {\r\n                            console.log(isCorrect);\r\n                            labelBlockSelect.color = Color.BLUE;\r\n                            nodeCheck[i][j].filled = true;\r\n                            console.log(emtyNode);\r\n                        }\r\n\r\n                        labelBlockSelect.string = selectedValue.toString();\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n    }   \r\n}\r\n\r\n\r\nexport function runScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\nexport function loadScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\n\r\n"]}