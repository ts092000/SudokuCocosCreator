{"version":3,"sources":["file:///C:/Users/ADMIN/OneDrive/M%C3%A1y%20t%C3%ADnh/SudokuMain2/SudokuMain2/assets/Script/GameController.ts"],"names":["runScene","arg0","Error","loadScene","_decorator","Component","Node","VerticalTextAlignment","Label","Vec3","Color","Sprite","director","AudioClip","AudioSource","Prefab","instantiate","SudokuCreator","GameView","GameClient","ccclass","property","GameController","type","selectedNode","puzzleGame","solutionGame","redNumber","difficultyLevel","timeElapsed","timeBestArr","timeBestArr1","timeBestArr2","volumeBg","volumeEffect","nodePositionArray","frameNodeNumArray","gameClient","matchId","currentPos","start","console","log","gameView","BoardNode","undefined","initAsync","then","catch","err","match","startMatch","data","error","bestscore","localStorage","getItem","JSON","parse","BestTime","string","Math","min","bestscore1","bestscore2","onLoad","LevelPanel","active","updateTimer","TimeLabel","rePlayGame","displayLevelPanel","update","BestTimeLevel","easyLevelGame","createPuzzleBoard","bgNodeValue","node","schedule","LevelLabel","NewGameBtn","mediumLevelGame","hardLevelGame","sudokuCreator","childMatrixWidth","boardData","createSudoku","i","puzzle","length","push","solution","emtyNode","nodeCheck","filled","value","j","nodeSudoku","setPosition","addChild","labelBlock","addComponent","toString","color","BLACK","nodeState","on","EventType","TOUCH_END","name","prefabInstance","frameNodeNum","position","parent","destroy","row","floor","x","getChildByName","nodePrefab","frameNode","setTimeout","col","y","rowStart","colStart","nodeNum","labelValue","verticalAlign","CENTER","numberLabels","selectedValue","parseInt","isNaN","volumeSelectNode","play","solutionValue","isCorrect","labelBlockSelect","getComponent","BLUE","unschedule","TimeFinish","volumeWinGame","BgMain","pause","setItem","stringify","WinGame","completeMatch","score","RED","PlayerFault","GameOver","volumeLose"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, VerticalTextAlignment, Label, Vec3, Color, Sprite, Button, director, AudioClip, AudioSource, Slider, Prefab, instantiate, Vec2} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\nimport { GameView } from './GameView';\r\nimport GameClient from '@dattenlagiday/oc_gamecenter_sdk_pkg';\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n\r\n    // @property(Node)\r\n    // startGame: Node;\r\n    \r\n    @property({type:GameView})\r\n    gameView: GameView;\r\n\r\n    @property({type:Label})\r\n    numberLabels: Label[] = [];\r\n\r\n    //LevelPanel\r\n\r\n    @property(Sprite)\r\n    bgNodeValue: Sprite;\r\n    \r\n    //Audio Game\r\n\r\n    @property(AudioClip)\r\n    volumeStart: AudioClip;\r\n\r\n    @property(AudioClip)\r\n    volumeSelectNode: AudioClip;\r\n\r\n    @property(AudioClip)\r\n    volumeLose: AudioClip;\r\n\r\n    @property(AudioClip)\r\n    volumeWinGame: AudioClip;\r\n\r\n    @property(Prefab)\r\n    frameNode: Prefab;\r\n\r\n    @property(Prefab)\r\n    frameNodeNum: Prefab;\r\n\r\n    selectedNode: Node = null;\r\n    puzzleGame: number[] = [];\r\n    solutionGame: number[] = [];\r\n    redNumber: number = 0;\r\n    difficultyLevel: number;\r\n    timeElapsed: number = 0; \r\n    timeBestArr: number[] = [];\r\n    timeBestArr1: number[] = [];\r\n    timeBestArr2: number[] = [];\r\n    volumeBg: number[] = [];\r\n    volumeEffect: number[] = [];\r\n\r\n    nodePositionArray: Vec3[] = [];\r\n    frameNodeNumArray: Node[] = [];\r\n\r\n    public gameClient;\r\n    matchId:string\r\n\r\n    public async start():Promise<void> {\r\n        console.log(this.gameView.BoardNode);\r\n        console.log(this.gameClient);\r\n        if(this.gameClient === undefined)\r\n        {\r\n            this.gameClient = new GameClient(\"643fce940a3bf613239132bc\",\"057e6bb4-e80d-40f2-ae0a-2940ac94ee15\");\r\n            await this.gameClient.initAsync()\r\n                .then(() => {})\r\n                .catch((err) => console.log(err));\r\n        }\r\n            \r\n        await this.gameClient.match\r\n            .startMatch()\r\n            .then((data) => {this.matchId=data.matchId})\r\n            .catch((error) => console.log(error));\r\n\r\n        let bestscore=localStorage.getItem('bestTime'); \r\n        if(bestscore){\r\n            this.timeBestArr=JSON.parse(bestscore);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr))\r\n        }\r\n\r\n        let bestscore1=localStorage.getItem('bestTime1');\r\n        if(bestscore1){\r\n            this.timeBestArr1=JSON.parse(bestscore1);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1))\r\n        }\r\n\r\n        let bestscore2=localStorage.getItem('bestTime2');\r\n        if(bestscore2){\r\n            this.timeBestArr2=JSON.parse(bestscore2);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2))\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n        this.gameView.LevelPanel.active = true;\r\n        //this.createPuzzleBoard();\r\n        console.log(this.puzzleGame)\r\n        console.log(this.solutionGame)\r\n    }\r\n\r\n    updateTimer() {\r\n        this.timeElapsed++;\r\n        this.gameView.TimeLabel.string = `Thời gian : ${this.timeElapsed} giây`;\r\n    }\r\n\r\n    rePlayGame(){\r\n        director.loadScene(\"MainGame\");\r\n    }\r\n\r\n    displayLevelPanel(){\r\n        this.gameView.LevelPanel.active = true;\r\n    }\r\n    \r\n    update(){\r\n        if(this.difficultyLevel == 0.2){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: DỄ'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất : ' +(Math.min(...this.timeBestArr));\r\n        } else if(this.difficultyLevel == 0.5){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: TRUNG BÌNH'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1));\r\n        } else if(this.difficultyLevel == 0.8){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: KHÓ'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2));\r\n        }\r\n    }\r\n\r\n    //levelFunction\r\n    easyLevelGame() {\r\n        this.difficultyLevel = 0.2;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.node.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.gameView.LevelLabel.string = \"Độ khó : DỄ\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n    }\r\n\r\n    mediumLevelGame() {\r\n        this.difficultyLevel = 0.5;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.node.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.gameView.LevelLabel.string = \"Độ khó : TRUNG BÌNH\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n    }\r\n\r\n    hardLevelGame() {\r\n        this.difficultyLevel = 0.8;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.node.active = true;\r\n        this.schedule(this.updateTimer, 1); \r\n        this.gameView.LevelLabel.string = \"Độ khó : KHÓ\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n    }\r\n\r\n    currentPos: Vec2 = null;\r\n    createPuzzleBoard(){\r\n\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(this.difficultyLevel);\r\n\r\n        for (let i = 0; i < boardData.puzzle.length; i++) {\r\n            this.puzzleGame.push(boardData.puzzle[i] + 1);\r\n        }\r\n        for (let i = 0; i < boardData.solution.length; i++) {\r\n            this.solutionGame.push(boardData.solution[i] + 1);\r\n        }\r\n\r\n        let emtyNode = 0;\r\n        const nodeCheck = [];\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            nodeCheck.push([]);\r\n            for (let j = 0; j < 9; j++) {\r\n                nodeCheck[i].push({ filled: false });\r\n                let value = this.puzzleGame[i*9 + j];\r\n                const nodeSudoku = new Node(`ValueGame${i*9+j}`);\r\n\r\n                nodeSudoku.setPosition(i * 55, j * 55);\r\n                this.gameView.BoardNode.addChild(nodeSudoku);\r\n\r\n                const labelBlock = nodeSudoku.addComponent(Label);\r\n                labelBlock.string = value === 0 ? \"    \" : value.toString();\r\n                labelBlock.color = Color.BLACK;\r\n\r\n                if (value === 0) {\r\n                    emtyNode++;\r\n                }\r\n\r\n                const nodeState = {};\r\n                nodeSudoku.on(Node.EventType.TOUCH_END, () => {\r\n                    if (value === 0) {\r\n                        this.selectedNode = nodeSudoku;\r\n                        if (!nodeState[nodeSudoku.name]) {\r\n                            nodeState[nodeSudoku.name] = true;\r\n                \r\n                            //Instantiate the prefab\r\n                            const prefabInstance = instantiate(this.frameNodeNum);\r\n                            prefabInstance.setPosition(nodeSudoku.position);\r\n                            nodeSudoku.parent.addChild(prefabInstance);\r\n                            this.nodePositionArray.push(prefabInstance.position);\r\n                            this.frameNodeNumArray.push(prefabInstance);\r\n                            console.log(this.nodePositionArray);\r\n                            console.log(this.frameNodeNumArray);\r\n                            if(this.nodePositionArray[this.nodePositionArray.length - 2] != prefabInstance.position) {\r\n                                console.log('1');\r\n                                this.frameNodeNumArray[this.frameNodeNumArray.length - 1].destroy();\r\n                            }\r\n                \r\n                            const row = Math.floor(nodeSudoku.position.x / 55);\r\n                            for (let i = 0; i < 9; i++) {\r\n                                if (i !== row) {\r\n                                    const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n\r\n                                    setTimeout(() => {\r\n                                        nodePrefab.destroy();\r\n                                    }, 1000);\r\n                                }\r\n                            }\r\n                \r\n                            const col = Math.floor(nodeSudoku.position.y / 55);\r\n                            for (let j = 0; j < 9; j++) {\r\n                                if (j !== col) {\r\n                                    const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n\r\n                                    setTimeout(() => {\r\n                                        nodePrefab.destroy();\r\n                                    }, 1000);\r\n                                }\r\n                            }\r\n                \r\n                            const rowStart = Math.floor(row / 3) * 3;\r\n                            const colStart = Math.floor(col / 3) * 3;\r\n                            for (let i = rowStart; i < rowStart + 3; i++) {\r\n                                for (let j = colStart; j < colStart + 3; j++) {\r\n                                    if (i !== row && j !== col) {\r\n                                        const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                        const nodePrefab = instantiate(this.frameNode);\r\n                                        nodePrefab.setPosition(node.position);\r\n                                        node.parent.addChild(nodePrefab);\r\n\r\n                                        setTimeout(() => {\r\n                                            nodePrefab.destroy();\r\n                                        }, 1000);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                });\r\n                \r\n                const nodeNum = new Node(\"NumberValueLabel\");\r\n                const labelValue = nodeNum.addComponent(Label);\r\n                labelValue.string = `  ${i + 1}  `;\r\n                labelValue.color = Color.BLACK;\r\n\r\n                labelValue.verticalAlign = VerticalTextAlignment.CENTER;\r\n                nodeNum.parent = this.node;\r\n                nodeNum.position = new Vec3(i % 3 * 70 + 210, Math.floor(i / 3) * -60, 0);\r\n                this.numberLabels.push(labelValue);\r\n                nodeNum.on(Node.EventType.TOUCH_END, () => {\r\n                    if (this.selectedNode) {\r\n                        const selectedValue = parseInt(labelValue.string);\r\n                        if (!isNaN(selectedValue)) {\r\n                            this.volumeSelectNode.play();\r\n                            const i = Math.floor(this.selectedNode.position.x / 55);\r\n                            const j = Math.floor(this.selectedNode.position.y / 55);\r\n                            const position = i * 9 + j;\r\n                            const solutionValue = this.solutionGame[position];\r\n                            const isCorrect = selectedValue === solutionValue;\r\n                            console.log(isCorrect);\r\n                        \r\n                            const labelBlockSelect = this.selectedNode.getComponent(Label);\r\n\r\n                            if (!nodeCheck[i][j].filled) {\r\n                                if (isCorrect) {\r\n                                    labelBlockSelect.color = Color.BLUE;\r\n                                    emtyNode--;\r\n                                    nodeCheck[i][j].filled = true;\r\n                                    console.log(emtyNode);\r\n                                \r\n                                    if (emtyNode === 0){\r\n                                        console.log(\"winner\");\r\n                                        this.unschedule(this.updateTimer);\r\n                                        this.gameView.TimeFinish.string = this.timeElapsed.toString() + \" giây\";\r\n                                        this.volumeWinGame.play();\r\n                                        this.gameView.BgMain.getComponent(AudioSource).pause();      \r\n                                        if(this.difficultyLevel == 0.2){\r\n                                            this.timeBestArr.push(this.timeElapsed);\r\n                                            localStorage.setItem('bestTime', JSON.stringify(this.timeBestArr));\r\n                                        }\r\n                                        if(this.difficultyLevel == 0.5){\r\n                                            this.timeBestArr1.push(this.timeElapsed);\r\n                                            localStorage.setItem('bestTime1', JSON.stringify(this.timeBestArr1));\r\n                                        }   \r\n                                        if(this.difficultyLevel == 0.8){\r\n                                            this.timeBestArr2.push(this.timeElapsed);\r\n                                            localStorage.setItem('bestTime2', JSON.stringify(this.timeBestArr2));\r\n                                        }\r\n                                        this.gameView.WinGame.active = true;\r\n\r\n                                        this.gameClient.match\r\n                                        .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                        .then((data) => {})\r\n                                        .catch((error) => console.log(error));                   \r\n                                    }         \r\n                                } else {\r\n                                    labelBlockSelect.color = Color.RED;\r\n                                    this.redNumber++;\r\n                                    this.gameView.PlayerFault.string = `Lỗi: ${this.redNumber}/3`\r\n                                    this.gameView.PlayerFault.node.active = true;\r\n                                    if (this.redNumber == 4) {\r\n                                        console.log(\"thua rồi nhé !!!\");\r\n                                        this.gameView.GameOver.active = true;\r\n                                        this.gameView.PlayerFault.string = `Lỗi 3/3`;\r\n                                        this.volumeLose.play();\r\n                                        this.gameView.BgMain.getComponent(AudioSource).pause();\r\n                                        \r\n                                        \r\n                                        this.gameClient.match\r\n                                        .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                        .then((data) => {})\r\n                                        .catch((error) => console.log(error));\r\n                                    }\r\n                                    if(this.redNumber == 5){\r\n                                        this.redNumber--;\r\n                                        this.gameView.PlayerFault.string = `Lỗi 3/3`; \r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            labelBlockSelect.string = selectedValue.toString();\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n    }   \r\n}\r\n\r\n\r\nexport function runScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\nexport function loadScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\n\r\n"]}