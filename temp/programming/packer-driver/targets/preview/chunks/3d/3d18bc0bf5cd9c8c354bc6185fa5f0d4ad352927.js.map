{"version":3,"sources":["file:///D:/gameCocos/SudokuMain2/assets/Script/GameController.ts"],"names":["_decorator","Component","Node","Label","resources","Prefab","Button","instantiate","SudokuCreator","ccclass","property","GameController","onLoad","createPuzzleBoard","buttonMenuNode","active","sudokuCreator","childMatrixWidth","boardData","createSudoku","solution","puzzleGame","solutionGame","i","puzzle","length","push","console","log","buttonPrefab","get","value","j","node","setPosition","boardNode","addChild","labelBlock","addComponent","string","toString","on","EventType","TOUCH_END","getPosition","buttonNode","getComponent","activeNode","children","find","childNode","getParent"],"mappings":"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","sourcesContent":["// import { _decorator, Component, Node, VerticalTextAlignment, Label } from 'cc';\r\n// const { ccclass, property } = _decorator;\r\n// import { SudokuCreator } from '@algorithm.ts/sudoku';\r\n\r\n// @ccclass('GameController')\r\n// export class GameController extends Component {\r\n//     @property(Node)\r\n//     boardNode: Node;\r\n\r\n//     onLoad() {\r\n//         this.createPuzzleBoard();\r\n//     }\r\n//     createPuzzleBoard(){\r\n//         let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n//         let boardData = sudokuCreator.createSudoku(0.2);\r\n//         let solution = boardData.solution;\r\n//         let puzzleGame: number[] = [];\r\n//         let solutionGame: number[] = [];\r\n\r\n//         for (let i = 0; i < boardData.puzzle.length; i++) {\r\n//             puzzleGame.push(boardData.puzzle[i] + 1);\r\n//         }\r\n//         for (let i = 0; i < boardData.solution.length; i++) {\r\n//             solutionGame.push(boardData.solution[i] + 1);\r\n//         }\r\n\r\n//         console.log(puzzleGame);\r\n//         console.log(solutionGame);\r\n\r\n//         for (let i = 0; i < 9; i++) {\r\n//             for (let j = 0; j < 9; j++) {\r\n//                 const value = puzzleGame[i*9 + j];\r\n//                 const node = new Node();\r\n//                 node.setPosition(i * 55, j * 55);\r\n//                 this.boardNode.addChild(node);\r\n                \r\n//                 const labelBlock = node.addComponent(Label);\r\n//                 labelBlock.string = value === 0 ? \"-\" : value.toString();\r\n\r\n//             }\r\n//         }\r\n\r\n//     }   \r\n// }\r\n\r\n\r\nimport { _decorator, Component, Node, VerticalTextAlignment, Label, resources, Prefab, Button, instantiate } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n    @property(Node)\r\n    boardNode: Node;\r\n\r\n    @property(Node)\r\n    buttonMenuNode: Node;\r\n\r\n    onLoad() {\r\n        this.createPuzzleBoard();\r\n        this.buttonMenuNode.active = false;\r\n    }\r\n\r\n    createPuzzleBoard(){\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(0.2);\r\n        let solution = boardData.solution;\r\n        let puzzleGame: number[] = [];\r\n        let solutionGame: number[] = [];\r\n\r\n        for (let i = 0; i < boardData.puzzle.length; i++) {\r\n            puzzleGame.push(boardData.puzzle[i] + 1);\r\n        }\r\n        for (let i = 0; i < boardData.solution.length; i++) {\r\n            solutionGame.push(boardData.solution[i] + 1);\r\n        }\r\n\r\n        console.log(puzzleGame);\r\n        console.log(solutionGame);\r\n\r\n        const buttonPrefab = resources.get('path/to/button/prefab', Prefab);\r\n        for (let i = 0; i < 9; i++) {\r\n            for (let j = 0; j < 9; j++) {\r\n                const value = puzzleGame[i*9 + j];\r\n                const node = new Node();\r\n                node.setPosition(i * 55, j * 55);\r\n                this.boardNode.addChild(node);\r\n                \r\n                const labelBlock = node.addComponent(Label);\r\n                labelBlock.string = value === 0 ? \"-\" : value.toString();\r\n\r\n                if (value === 0) {\r\n                    node.addComponent(Button);\r\n                    node.on(Node.EventType.TOUCH_END, () => {\r\n                        // Xử lý sự kiện click vào ô có giá trị '-'\r\n                        this.buttonMenuNode.active = true;\r\n                        this.buttonMenuNode.setPosition(node.getPosition());\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 1; i <= 9; i++) {\r\n            const buttonNode = instantiate(buttonPrefab);\r\n            buttonNode.getComponent(Label).string = i.toString();\r\n            buttonNode.on(Node.EventType.TOUCH_END, () => {\r\n                // Xử lý sự kiện click vào nút số\r\n                const activeNode = this.buttonMenuNode.children.find((childNode) => {\r\n                    return childNode.active;\r\n                });\r\n                if (activeNode) {\r\n                    const labelBlock = activeNode.getParent().getComponent(Label);\r\n                    labelBlock.string = i.toString();\r\n                    this.buttonMenuNode.active = false;\r\n                }\r\n            });\r\n            this.buttonMenuNode.addChild(buttonNode);\r\n        }\r\n    }   \r\n}\r\n"]}