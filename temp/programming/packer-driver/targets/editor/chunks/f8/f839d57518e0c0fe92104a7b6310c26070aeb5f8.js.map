{"version":3,"sources":["file:///D:/gameCocos/SudokuMain2/assets/Script/GameController.ts"],"names":["_decorator","Component","Node","VerticalTextAlignment","Label","Vec3","Color","SudokuCreator","ccclass","property","GameController","selectedNode","puzzleGame","solutionGame","onLoad","createPuzzleBoard","sudokuCreator","childMatrixWidth","boardData","createSudoku","i","puzzle","length","push","solution","j","value","console","log","nodeSudoku","setPosition","boardNode","addChild","labelBlock","addComponent","string","toString","on","EventType","TOUCH_END","nodeNum","label","verticalAlign","CENTER","parent","node","position","Math","floor","numberLabels","getComponent","color","BLACK"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, VerticalTextAlignment, Label, Vec3, Color } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n    @property(Node)\r\n    boardNode: Node;\r\n    @property(Label)\r\n    numberLabels: Label[] = [];\r\n    private selectedNode: Node = null;\r\n    puzzleGame: number[] = [];\r\n    solutionGame: number[] = [];\r\n\r\n\r\n    onLoad() {\r\n        this.createPuzzleBoard();\r\n    }\r\n\r\n    \r\n\r\n    createPuzzleBoard(){\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(0.2);\r\n\r\n        for (let i = 0; i < boardData.puzzle.length; i++) {\r\n            this.puzzleGame.push(boardData.puzzle[i] + 1);\r\n        }\r\n        for (let i = 0; i < boardData.solution.length; i++) {\r\n            this.solutionGame.push(boardData.solution[i] + 1);\r\n        }\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            for (let j = 0; j < 9; j++) {\r\n                const value = this.puzzleGame[i*9 + j];\r\n                console.log(this.puzzleGame[0]);\r\n                console.log(this.solutionGame[0]);\r\n                const nodeSudoku = new Node(\"ValueGame\");\r\n                nodeSudoku.setPosition(i * 55, j * 55);\r\n                this.boardNode.addChild(nodeSudoku);\r\n                \r\n                const labelBlock = nodeSudoku.addComponent(Label);\r\n                labelBlock.string = value === 0 ? \"-\" : value.toString();\r\n\r\n                nodeSudoku.on(Node.EventType.TOUCH_END, () => {\r\n                    this.selectedNode = nodeSudoku;\r\n                });\r\n            }\r\n            const nodeNum = new Node(\"NumberValueLabel\");\r\n            const label = nodeNum.addComponent(Label);\r\n            label.string = `${i + 1}`;\r\n            label.verticalAlign = VerticalTextAlignment.CENTER;\r\n            nodeNum.parent = this.node;\r\n            nodeNum.position = new Vec3(i % 3 * 100 + 180, Math.floor(i / 3) * -110, 0);\r\n            this.numberLabels.push(label);\r\n            nodeNum.on(Node.EventType.TOUCH_END, () => {\r\n                if (this.selectedNode) {\r\n                    const labelBlock = this.selectedNode.getComponent(Label);\r\n                    labelBlock.string = label.string;\r\n                    labelBlock.color = Color.BLACK;\r\n                }\r\n            });\r\n        }\r\n    }   \r\n}\r\n\r\n"]}