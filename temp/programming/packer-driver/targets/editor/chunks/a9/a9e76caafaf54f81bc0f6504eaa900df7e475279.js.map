{"version":3,"sources":["file:///C:/Users/ADMIN/OneDrive/M%C3%A1y%20t%C3%ADnh/SudokuMain2/SudokuMain2/assets/Script/GameController.ts"],"names":["runScene","arg0","Error","loadScene","_decorator","Component","Node","VerticalTextAlignment","Label","Vec3","Color","director","Prefab","instantiate","find","SudokuCreator","GameView","StoredPersistNode","ccclass","property","GameController","type","selectedNode","puzzleGame","solutionGame","redNumber","difficultyLevel","timeElapsed","timeBestArr","timeBestArr1","timeBestArr2","volumeBg","volumeEffect","nodePositionArray","frameNodeNumArray","frameNodePositionArray","frameNodeArray","frameNodeArrayLength","gameClient","matchId","currentPos","start","_this","gameView","AudioBg","play","parameters","gameClientParams","getComponent","match","startMatch","then","data","catch","error","console","log","bestscore","localStorage","getItem","JSON","parse","BestTime","string","Math","min","bestscore1","bestscore2","AudioMute","node","active","AudioUnmute","onLoad","LevelPanel","BgBoardNode","updateTimer","TimeLabel","rePlayGame","displayLevelPanel","update","BestTimeLevel","easyLevelGame","createPuzzleBoard","bgNodeValue","schedule","LevelLabel","NewGameBtn","PlayerFault","mediumLevelGame","hardLevelGame","sudokuCreator","childMatrixWidth","boardData","createSudoku","i","puzzle","length","push","solution","emtyNode","nodeCheck","j","filled","value","nodeSudoku","setPosition","BoardNode","addChild","labelBlock","addComponent","toString","color","BLACK","nodeState","on","EventType","TOUCH_END","name","prefabInstance","frameNodeNum","position","parent","destroy","row","floor","x","getChildByName","nodePrefab","frameNode","col","y","rowStart","colStart","nodeNum","labelValue","verticalAlign","CENTER","numberLabels","selectedValue","parseInt","isNaN","SelectNode","solutionValue","isCorrect","labelBlockSelect","BLUE","unschedule","TimeFinish","WinAudio","setItem","stringify","WinGame","completeMatch","score","RED","GameOver","pause","LoseAudio","btnMute","volume","btnUnmute"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, VerticalTextAlignment, Label, Vec3, Color, Sprite, Button, director, AudioClip, AudioSource, Slider, Prefab, instantiate, Vec2, find} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\nimport { GameView } from './GameView';\r\nimport GameClient from '@dattenlagiday/oc_gamecenter_sdk_pkg';\r\nimport { StoredPersistNode } from './StoredPersistNode';\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n\r\n    // @property(Node)\r\n    // startGame: Node;\r\n    \r\n    @property({type:GameView})\r\n    gameView: GameView;\r\n\r\n    @property({type:Label})\r\n    numberLabels: Label[] = [];\r\n\r\n    //LevelPanel\r\n\r\n    @property({type:Node})\r\n    bgNodeValue: Node;\r\n    \r\n    //Audio Game\r\n\r\n    @property(Prefab)\r\n    frameNode: Prefab;\r\n\r\n    @property(Prefab)\r\n    frameNodeNum: Prefab;\r\n\r\n    selectedNode: Node = null;\r\n    puzzleGame: number[] = [];\r\n    solutionGame: number[] = [];\r\n    redNumber: number = 0;\r\n    difficultyLevel: number;\r\n    timeElapsed: number = 0; \r\n    timeBestArr: number[] = [];\r\n    timeBestArr1: number[] = [];\r\n    timeBestArr2: number[] = [];\r\n    volumeBg: number[] = [];\r\n    volumeEffect: number[] = [];\r\n\r\n    nodePositionArray: Vec3[] = [];\r\n    frameNodeNumArray: Node[] = [];\r\n\r\n    frameNodePositionArray: Vec3[] = [];\r\n    frameNodeArray: Node[] = [];\r\n    frameNodeArrayLength: number;\r\n\r\n    public gameClient;\r\n    matchId:string\r\n\r\n    public async start():Promise<void> {\r\n        let _this = this;\r\n        this.gameView.AudioBg.play();\r\n        let parameters = find(\"GameClient\");\r\n        let gameClientParams = parameters.getComponent(StoredPersistNode);\r\n            \r\n        this.gameClient = gameClientParams.gameClient;\r\n        \r\n        await gameClientParams.gameClient.match\r\n            .startMatch()\r\n            .then((data) => {_this.matchId=data.matchId})\r\n            .catch((error) => console.log(error));\r\n\r\n        let bestscore=localStorage.getItem('bestTime'); \r\n        if(bestscore){\r\n            this.timeBestArr=JSON.parse(bestscore);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr))\r\n        }\r\n\r\n        let bestscore1=localStorage.getItem('bestTime1');\r\n        if(bestscore1){\r\n            this.timeBestArr1=JSON.parse(bestscore1);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1))\r\n        }\r\n\r\n        let bestscore2=localStorage.getItem('bestTime2');\r\n        if(bestscore2){\r\n            this.timeBestArr2=JSON.parse(bestscore2);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2))\r\n        }\r\n\r\n        this.gameView.AudioMute.node.active = false;\r\n        this.gameView.AudioUnmute.node.active = true;\r\n    }\r\n\r\n    onLoad() {\r\n        this.gameView.LevelPanel.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n        //this.createPuzzleBoard();\r\n        console.log(this.puzzleGame)\r\n        console.log(this.solutionGame)\r\n    }\r\n\r\n    updateTimer() {\r\n        this.timeElapsed++;\r\n        this.gameView.TimeLabel.string = `Thời gian : ${this.timeElapsed} giây`;\r\n    }\r\n\r\n    rePlayGame(){\r\n        director.loadScene(\"MainGame\");\r\n    }\r\n\r\n    displayLevelPanel(){\r\n        this.gameView.LevelPanel.active = true;\r\n    }\r\n    \r\n    update(){\r\n        if(this.difficultyLevel == 0.2){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: DỄ'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất : ' +(Math.min(...this.timeBestArr));\r\n        } else if(this.difficultyLevel == 0.5){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: TRUNG BÌNH'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1));\r\n        } else if(this.difficultyLevel == 0.8){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: KHÓ'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2));\r\n        }\r\n    }\r\n\r\n    //levelFunction\r\n    easyLevelGame() {\r\n        this.difficultyLevel = 0.2;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.gameView.LevelLabel.string = \"Độ khó : DỄ\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n        this.gameView.PlayerFault.node.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n    }\r\n\r\n    mediumLevelGame() {\r\n        this.difficultyLevel = 0.5;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.gameView.LevelLabel.string = \"Độ khó : TRUNG BÌNH\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n        this.gameView.PlayerFault.node.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n    }\r\n\r\n    hardLevelGame() {\r\n        this.difficultyLevel = 0.8;\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.active = true;\r\n        this.schedule(this.updateTimer, 1); \r\n        this.gameView.LevelLabel.string = \"Độ khó : KHÓ\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n        this.gameView.PlayerFault.node.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n    }\r\n\r\n    currentPos: Vec2 = null;\r\n    createPuzzleBoard(){\r\n        this.frameNodeArrayLength = 0;\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(this.difficultyLevel);\r\n\r\n        for (let i = 0; i < boardData.puzzle.length; i++) {\r\n            this.puzzleGame.push(boardData.puzzle[i] + 1);\r\n        }\r\n        for (let i = 0; i < boardData.solution.length; i++) {\r\n            this.solutionGame.push(boardData.solution[i] + 1);\r\n        }\r\n\r\n        let emtyNode = 0;\r\n        const nodeCheck = [];\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            nodeCheck.push([]);\r\n            for (let j = 0; j < 9; j++) {\r\n                nodeCheck[i].push({ filled: false });\r\n                let value = this.puzzleGame[i*9 + j];\r\n                const nodeSudoku = new Node(`ValueGame${i*9+j}`);\r\n\r\n                nodeSudoku.setPosition(i * 55, j * 55);\r\n                this.gameView.BoardNode.addChild(nodeSudoku);\r\n\r\n                const labelBlock = nodeSudoku.addComponent(Label);\r\n                labelBlock.string = value === 0 ? \"    \" : value.toString();\r\n                labelBlock.color = Color.BLACK;\r\n\r\n                if (value === 0) {\r\n                    emtyNode++;\r\n                }\r\n\r\n                const nodeState = {};\r\n                nodeSudoku.on(Node.EventType.TOUCH_END, () => {\r\n                    if (value === 0) {\r\n                        this.selectedNode = nodeSudoku;\r\n                        if (!nodeState[nodeSudoku.name]) {\r\n                            // nodeState[nodeSudoku.name] = true;\r\n                \r\n                            //Instantiate the prefab\r\n                            const prefabInstance = instantiate(this.frameNodeNum);\r\n                            prefabInstance.setPosition(nodeSudoku.position);\r\n                            nodeSudoku.parent.addChild(prefabInstance);\r\n                            this.nodePositionArray.push(prefabInstance.position);\r\n                            this.frameNodeNumArray.push(prefabInstance);\r\n                            if(this.nodePositionArray[this.nodePositionArray.length - 2] != prefabInstance.position) {\r\n                                if (this.frameNodeNumArray.length > 1) {\r\n                                    this.frameNodeNumArray[this.frameNodeNumArray.length - 2].destroy();\r\n                                }\r\n                            }\r\n                \r\n                            const row = Math.floor(nodeSudoku.position.x / 55);\r\n                            for (let i = 0; i < 9; i++) {\r\n                                if (i !== row) {\r\n                                    const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n                                    \r\n                                    this.frameNodeArray.push(nodePrefab);\r\n\r\n                                    console.log(this.frameNodeArray);\r\n                                    if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                        for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                            this.frameNodeArrayLength++;\r\n                                            console.log(this.frameNodeArrayLength);\r\n                                            console.log(this.frameNodeArray.length);\r\n                                            this.frameNodeArray[i - 1].destroy();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                \r\n                            const col = Math.floor(nodeSudoku.position.y / 55);\r\n                            for (let j = 0; j < 9; j++) {\r\n                                if (j !== col) {\r\n                                    const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n\r\n                                    this.frameNodeArray.push(nodePrefab);\r\n\r\n                                    console.log(this.frameNodeArray);\r\n                                    if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                        for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                            this.frameNodeArrayLength++;\r\n                                            console.log(this.frameNodeArrayLength);\r\n                                            console.log(this.frameNodeArray.length);\r\n                                            this.frameNodeArray[i - 1].destroy();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                \r\n                            const rowStart = Math.floor(row / 3) * 3;\r\n                            const colStart = Math.floor(col / 3) * 3;\r\n                            for (let i = rowStart; i < rowStart + 3; i++) {\r\n                                for (let j = colStart; j < colStart + 3; j++) {\r\n                                    if (i !== row && j !== col) {\r\n                                        const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                        const nodePrefab = instantiate(this.frameNode);\r\n                                        nodePrefab.setPosition(node.position);\r\n                                        node.parent.addChild(nodePrefab);\r\n\r\n                                        this.frameNodeArray.push(nodePrefab);\r\n\r\n                                        console.log(this.frameNodeArray);\r\n                                        if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                            for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                                this.frameNodeArrayLength++;\r\n                                                console.log(this.frameNodeArrayLength);\r\n                                                console.log(this.frameNodeArray.length);\r\n                                                this.frameNodeArray[i - 1].destroy();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                });\r\n                \r\n            }\r\n            const nodeNum = new Node(\"NumberValueLabel\");\r\n            const labelValue = nodeNum.addComponent(Label);\r\n            labelValue.string = `  ${i + 1}  `;\r\n            labelValue.color = Color.BLACK;\r\n\r\n            labelValue.verticalAlign = VerticalTextAlignment.CENTER;\r\n            nodeNum.parent = this.node;\r\n            nodeNum.position = new Vec3(i % 3 * 70 + 210, Math.floor(i / 3) * -60, 0);\r\n            this.numberLabels.push(labelValue);\r\n            nodeNum.on(Node.EventType.TOUCH_END, () => {\r\n                if (this.selectedNode) {\r\n                    const selectedValue = parseInt(labelValue.string);\r\n                    if (!isNaN(selectedValue)) {\r\n                        this.gameView.SelectNode.play();\r\n                        const i = Math.floor(this.selectedNode.position.x / 55);\r\n                        const j = Math.floor(this.selectedNode.position.y / 55);\r\n                        const position = i * 9 + j;\r\n                        const solutionValue = this.solutionGame[position];\r\n                        const isCorrect = selectedValue === solutionValue;\r\n                        console.log(isCorrect);\r\n                    \r\n                        const labelBlockSelect = this.selectedNode.getComponent(Label);\r\n\r\n                        console.log(nodeCheck[i][j].filled);\r\n                        if (!nodeCheck[i][j].filled) {\r\n                            if (isCorrect == true) {\r\n                                console.log(isCorrect);\r\n                                labelBlockSelect.color = Color.BLUE;\r\n                                emtyNode--;\r\n                                nodeCheck[i][j].filled = true;\r\n                                console.log(emtyNode);\r\n                            \r\n                                if (emtyNode === 0){\r\n                                    console.log(\"winner\");\r\n                                    this.unschedule(this.updateTimer);\r\n                                    this.gameView.TimeFinish.string = this.timeElapsed.toString() + \" giây\";\r\n                                    this.gameView.WinAudio.play();\r\n                                    // this.gameView.BgMain.getComponent(AudioSource).pause();      \r\n                                    if(this.difficultyLevel == 0.2){\r\n                                        this.timeBestArr.push(this.timeElapsed);\r\n                                        localStorage.setItem('bestTime', JSON.stringify(this.timeBestArr));\r\n                                    }\r\n                                    if(this.difficultyLevel == 0.5){\r\n                                        this.timeBestArr1.push(this.timeElapsed);\r\n                                        localStorage.setItem('bestTime1', JSON.stringify(this.timeBestArr1));\r\n                                    }   \r\n                                    if(this.difficultyLevel == 0.8){\r\n                                        this.timeBestArr2.push(this.timeElapsed);\r\n                                        localStorage.setItem('bestTime2', JSON.stringify(this.timeBestArr2));\r\n                                    }\r\n                                    this.gameView.WinGame.active = true;\r\n\r\n                                    this.gameClient.match\r\n                                    .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                    .then((data) => {})\r\n                                    .catch((error) => console.log(error));                   \r\n                                }         \r\n                            } \r\n                            else if (isCorrect == false) {\r\n                                console.log(isCorrect);\r\n                                labelBlockSelect.color = Color.RED;\r\n                                this.redNumber++;\r\n                                this.gameView.PlayerFault.string = `Lỗi: ${this.redNumber}/3`\r\n                                this.gameView.PlayerFault.node.active = true;\r\n                                if (this.redNumber == 4) {\r\n                                    console.log(\"thua rồi nhé !!!\");\r\n                                    this.gameView.BgBoardNode.active = false;\r\n                                    this.gameView.BoardNode.active = false;\r\n                                    this.gameView.GameOver.active = true;\r\n                                    this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                    this.gameView.NewGameBtn.node.active = false;\r\n                                    this.unschedule(this.updateTimer);\r\n                                    this.gameView.AudioBg.pause();\r\n                                    this.gameView.LoseAudio.play();\r\n                                    // this.gameView.BgMain.getComponent(AudioSource).pause();\r\n                                    \r\n                                    this.gameClient.match\r\n                                    .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                    .then((data) => {})\r\n                                    .catch((error) => console.log(error));\r\n                                }\r\n                                if(this.redNumber == 5){\r\n                                    this.redNumber--;\r\n                                    this.gameView.BgBoardNode.active = false;\r\n                                    this.gameView.BoardNode.active = false;\r\n                                    this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                    this.gameView.NewGameBtn.node.active = false;\r\n                                    this.unschedule(this.updateTimer);\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (nodeCheck[i][j].filled && isCorrect == false) {\r\n                            console.log(isCorrect);\r\n                            labelBlockSelect.color = Color.RED;\r\n                            this.redNumber++;\r\n                            this.gameView.PlayerFault.string = `Lỗi: ${this.redNumber}/3`\r\n                            this.gameView.PlayerFault.node.active = true;\r\n                            if (this.redNumber == 4) {\r\n                                console.log(\"thua rồi nhé !!!\");\r\n                                this.gameView.GameOver.active = true;\r\n                                this.gameView.BgBoardNode.active = false;\r\n                                this.gameView.BoardNode.active = false;\r\n                                this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                this.gameView.LoseAudio.play();\r\n                                this.gameView.AudioBg.pause();\r\n                                this.unschedule(this.updateTimer);\r\n                                // this.gameView.BgMain.getComponent(AudioSource).pause();\r\n                                this.gameView.NewGameBtn.node.active = false;\r\n                                \r\n                                this.gameClient.match\r\n                                .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                .then((data) => {})\r\n                                .catch((error) => console.log(error));\r\n                            }\r\n                            if(this.redNumber == 5){\r\n                                this.redNumber--;\r\n                                this.gameView.BgBoardNode.active = false;\r\n                                this.gameView.BoardNode.active = false;\r\n                                this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                this.gameView.NewGameBtn.node.active = false;\r\n                                this.unschedule(this.updateTimer);\r\n                            }\r\n                        }\r\n\r\n                        else if (nodeCheck[i][j].filled && isCorrect == true) {\r\n                            console.log(isCorrect);\r\n                            labelBlockSelect.color = Color.BLUE;\r\n                            nodeCheck[i][j].filled = true;\r\n                            console.log(emtyNode);\r\n                        }\r\n\r\n                        labelBlockSelect.string = selectedValue.toString();\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n    }   \r\n\r\n    private btnMute(AudioMute: Button) {\r\n        this.gameView.AudioMute.node.active = false;\r\n        this.gameView.AudioUnmute.node.active = true;\r\n        this.gameView.AudioBg.volume = 0.7;\r\n        this.gameView.SelectNode.volume = 0.7;\r\n        this.gameView.WinAudio.volume = 0.7;\r\n        this.gameView.LoseAudio.volume = 0.7;\r\n    }\r\n\r\n    private btnUnmute(AudioMute: Button) {\r\n        this.gameView.AudioMute.node.active = true;\r\n        this.gameView.AudioUnmute.node.active = false;\r\n        this.gameView.AudioBg.volume = 0;\r\n        this.gameView.SelectNode.volume = 0;\r\n        this.gameView.WinAudio.volume = 0;\r\n        this.gameView.LoseAudio.volume = 0;\r\n    }\r\n}\r\n\r\n\r\nexport function runScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\nexport function loadScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\n\r\n"]}