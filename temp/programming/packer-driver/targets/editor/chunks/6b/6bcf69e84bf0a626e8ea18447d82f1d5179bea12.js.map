{"version":3,"sources":["file:///C:/Users/ADMIN/OneDrive/M%C3%A1y%20t%C3%ADnh/SudokuMain2/SudokuMain2/assets/Script/GameController.ts"],"names":["runScene","arg0","Error","loadScene","_decorator","Component","Node","VerticalTextAlignment","Label","Vec3","Color","Button","director","Prefab","instantiate","find","SudokuCreator","GameView","StoredPersistNode","ccclass","property","GameController","type","selectedNode","puzzleGame","solutionGame","redNumber","difficultyLevel","timeElapsed","timeBestArr","timeBestArr1","timeBestArr2","volumeBg","volumeEffect","nodePositionArray","frameNodeNumArray","frameNodePositionArray","frameNodeArray","frameNodeArrayLength","volumeSudokuArray","gameClient","matchId","currentPos","start","_this","parameters","gameClientParams","getComponent","match","startMatch","then","data","catch","error","console","log","bestscore","localStorage","getItem","JSON","parse","gameView","BestTime","string","Math","min","bestscore1","bestscore2","volumeValue","length","AudioBg","volume","SelectNode","WinAudio","LoseAudio","AudioMute","node","active","AudioUnmute","play","onLoad","LevelPanel","BgBoardNode","updateTimer","TimeLabel","rePlayGame","displayLevelPanel","update","BestTimeLevel","on","EventType","CLICK","btnMute","btnUnmute","easyLevelGame","StartAudio","createPuzzleBoard","bgNodeValue","schedule","LevelLabel","NewGameBtn","PlayerFault","mediumLevelGame","hardLevelGame","sudokuCreator","childMatrixWidth","boardData","createSudoku","i","puzzle","push","solution","emtyNode","nodeCheck","j","filled","value","nodeSudoku","setPosition","BoardNode","addChild","labelBlock","addComponent","toString","color","BLACK","nodeState","TOUCH_END","name","prefabInstance","frameNodeNum","position","parent","destroy","row","floor","x","getChildByName","nodePrefab","frameNode","col","y","rowStart","colStart","nodeNum","labelValue","verticalAlign","CENTER","numberLabels","selectedValue","parseInt","isNaN","solutionValue","isCorrect","labelBlockSelect","BLUE","unschedule","TimeFinish","pause","setItem","stringify","WinGame","completeMatch","score","RED","GameOver"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, VerticalTextAlignment, Label, Vec3, Color, Sprite, Button, director, AudioClip, AudioSource, Slider, Prefab, instantiate, Vec2, find} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\nimport { GameView } from './GameView';\r\nimport GameClient from '@dattenlagiday/oc_gamecenter_sdk_pkg';\r\nimport { StoredPersistNode } from './StoredPersistNode';\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n\r\n    // @property(Node)\r\n    // startGame: Node;\r\n    \r\n    @property({type:GameView})\r\n    gameView: GameView;\r\n\r\n    @property({type:Label})\r\n    numberLabels: Label[] = [];\r\n\r\n    //LevelPanel\r\n\r\n    @property({type:Node})\r\n    bgNodeValue: Node;\r\n    \r\n    //Audio Game\r\n\r\n    @property(Prefab)\r\n    frameNode: Prefab;\r\n\r\n    @property(Prefab)\r\n    frameNodeNum: Prefab;\r\n\r\n    selectedNode: Node = null;\r\n    puzzleGame: number[] = [];\r\n    solutionGame: number[] = [];\r\n    redNumber: number = 0;\r\n    difficultyLevel: number;\r\n    timeElapsed: number = 0; \r\n    timeBestArr: number[] = [];\r\n    timeBestArr1: number[] = [];\r\n    timeBestArr2: number[] = [];\r\n    volumeBg: number[] = [];\r\n    volumeEffect: number[] = [];\r\n\r\n    nodePositionArray: Vec3[] = [];\r\n    frameNodeNumArray: Node[] = [];\r\n\r\n    frameNodePositionArray: Vec3[] = [];\r\n    frameNodeArray: Node[] = [];\r\n    frameNodeArrayLength: number;\r\n\r\n    private volumeSudokuArray: number[] = [];\r\n    public gameClient;\r\n    matchId:string\r\n\r\n    public async start():Promise<void> {\r\n        let _this = this;\r\n        let parameters = find(\"GameClient\");\r\n        let gameClientParams = parameters.getComponent(StoredPersistNode);\r\n            \r\n        this.gameClient = gameClientParams.gameClient;\r\n        \r\n        await gameClientParams.gameClient.match\r\n            .startMatch()\r\n            .then((data) => {_this.matchId=data.matchId})\r\n            .catch((error) => console.log(error));\r\n\r\n        let bestscore=localStorage.getItem('bestTime'); \r\n        if(bestscore){\r\n            this.timeBestArr=JSON.parse(bestscore);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr))\r\n        }\r\n\r\n        let bestscore1=localStorage.getItem('bestTime1');\r\n        if(bestscore1){\r\n            this.timeBestArr1=JSON.parse(bestscore1);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1))\r\n        }\r\n\r\n        let bestscore2=localStorage.getItem('bestTime2');\r\n        if(bestscore2){\r\n            this.timeBestArr2=JSON.parse(bestscore2);\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2))\r\n        }\r\n\r\n        let volumeValue = JSON.parse(localStorage.getItem('volumeSudokuArray'));\r\n\r\n        if (volumeValue.length == 0) {\r\n            this.gameView.AudioBg.volume = 0.7;\r\n            this.gameView.SelectNode.volume = 0.7;\r\n            this.gameView.WinAudio.volume = 0.7;\r\n            this.gameView.LoseAudio.volume = 0.7;\r\n        }\r\n        else {\r\n            this.gameView.AudioBg.volume = volumeValue[ volumeValue.length - 1];\r\n            this.gameView.SelectNode.volume = volumeValue[ volumeValue.length - 1];\r\n            this.gameView.WinAudio.volume = volumeValue[ volumeValue.length - 1];\r\n            this.gameView.LoseAudio.volume = volumeValue[ volumeValue.length - 1];\r\n        }\r\n\r\n        if (this.gameView.AudioBg.volume == 0.7) {\r\n            this.gameView.AudioMute.node.active = false;\r\n            this.gameView.AudioUnmute.node.active = true;\r\n        }\r\n        \r\n        if (this.gameView.AudioBg.volume == 0) {\r\n            this.gameView.AudioMute.node.active = true;\r\n            this.gameView.AudioUnmute.node.active = false;\r\n        }\r\n        this.gameView.AudioBg.play();\r\n    }\r\n\r\n    onLoad() {\r\n        this.gameView.LevelPanel.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n        //this.createPuzzleBoard();\r\n    }\r\n\r\n    updateTimer() {\r\n        this.timeElapsed++;\r\n        this.gameView.TimeLabel.string = `Thời gian : ${this.timeElapsed} giây`;\r\n    }\r\n\r\n    rePlayGame(){\r\n        director.loadScene(\"Menu\");\r\n    }\r\n\r\n    displayLevelPanel(){\r\n        this.gameView.LevelPanel.active = true;\r\n    }\r\n    \r\n    update(){\r\n        if(this.difficultyLevel == 0.2){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: Dễ'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất : ' +(Math.min(...this.timeBestArr)) + ' giây';\r\n        } else if(this.difficultyLevel == 0.5){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: Trung Bình'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr1)) + ' giây';\r\n        } else if(this.difficultyLevel == 0.8){\r\n            this.gameView.BestTimeLevel.string = 'Độ Khó: Khó'\r\n            this.gameView.BestTime.string = 'Thời gian nhanh nhất: ' +(Math.min(...this.timeBestArr2)) + ' giây';\r\n        }\r\n\r\n        this.gameView.AudioMute.node.on(Button.EventType.CLICK, this.btnMute, this);\r\n        this.gameView.AudioUnmute.node.on(Button.EventType.CLICK, this.btnUnmute, this);\r\n    }\r\n\r\n    //levelFunction\r\n    easyLevelGame() {\r\n        this.difficultyLevel = 0.2;\r\n        this.gameView.StartAudio.play();\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.gameView.LevelLabel.string = \"Độ khó : Dễ\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n        this.gameView.PlayerFault.node.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n    }\r\n\r\n    mediumLevelGame() {\r\n        this.difficultyLevel = 0.5;\r\n        this.gameView.StartAudio.play();\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.active = true;\r\n        this.schedule(this.updateTimer, 1);\r\n        this.gameView.LevelLabel.string = \"Độ khó : Trung Bình\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n        this.gameView.PlayerFault.node.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n    }\r\n\r\n    hardLevelGame() {\r\n        this.difficultyLevel = 0.8;\r\n        this.gameView.StartAudio.play();\r\n        this.createPuzzleBoard();\r\n        this.gameView.LevelPanel.active = false;\r\n        this.bgNodeValue.active = true;\r\n        this.schedule(this.updateTimer, 1); \r\n        this.gameView.LevelLabel.string = \"Độ khó : Khó\"\r\n        this.gameView.NewGameBtn.node.active = true;\r\n        this.gameView.PlayerFault.node.active = true;\r\n        this.gameView.BgBoardNode.active = true;\r\n    }\r\n\r\n    currentPos: Vec2 = null;\r\n    createPuzzleBoard(){\r\n        this.frameNodeArrayLength = 0;\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(this.difficultyLevel);\r\n\r\n        for (let i = 0; i < boardData.puzzle.length; i++) {\r\n            this.puzzleGame.push(boardData.puzzle[i] + 1);\r\n        }\r\n        for (let i = 0; i < boardData.solution.length; i++) {\r\n            this.solutionGame.push(boardData.solution[i] + 1);\r\n        }\r\n\r\n        let emtyNode = 0;\r\n        const nodeCheck = [];\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            nodeCheck.push([]);\r\n            for (let j = 0; j < 9; j++) {\r\n                nodeCheck[i].push({ filled: false });\r\n                let value = this.puzzleGame[i*9 + j];\r\n                const nodeSudoku = new Node(`ValueGame${i*9+j}`);\r\n\r\n                nodeSudoku.setPosition(i * 55, j * 55);\r\n                this.gameView.BoardNode.addChild(nodeSudoku);\r\n\r\n                const labelBlock = nodeSudoku.addComponent(Label);\r\n                labelBlock.string = value === 0 ? \"    \" : value.toString();\r\n                labelBlock.color = Color.BLACK;\r\n\r\n                if (value === 0) {\r\n                    emtyNode++;\r\n                }\r\n\r\n                const nodeState = {};\r\n                nodeSudoku.on(Node.EventType.TOUCH_END, () => {\r\n                    if (value === 0) {\r\n                        this.selectedNode = nodeSudoku;\r\n                        if (!nodeState[nodeSudoku.name]) {\r\n                            // nodeState[nodeSudoku.name] = true;\r\n                \r\n                            //Instantiate the prefab\r\n                            const prefabInstance = instantiate(this.frameNodeNum);\r\n                            prefabInstance.setPosition(nodeSudoku.position);\r\n                            nodeSudoku.parent.addChild(prefabInstance);\r\n                            this.nodePositionArray.push(prefabInstance.position);\r\n                            this.frameNodeNumArray.push(prefabInstance);\r\n                            if(this.nodePositionArray[this.nodePositionArray.length - 2] != prefabInstance.position) {\r\n                                if (this.frameNodeNumArray.length > 1) {\r\n                                    this.frameNodeNumArray[this.frameNodeNumArray.length - 2].destroy();\r\n                                }\r\n                            }\r\n                \r\n                            const row = Math.floor(nodeSudoku.position.x / 55);\r\n                            for (let i = 0; i < 9; i++) {\r\n                                if (i !== row) {\r\n                                    const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n                                    \r\n                                    this.frameNodeArray.push(nodePrefab);\r\n                                    if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                        for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                            this.frameNodeArrayLength++;\r\n                                            this.frameNodeArray[i - 1].destroy();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                \r\n                            const col = Math.floor(nodeSudoku.position.y / 55);\r\n                            for (let j = 0; j < 9; j++) {\r\n                                if (j !== col) {\r\n                                    const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                    const nodePrefab = instantiate(this.frameNode);\r\n                                    nodePrefab.setPosition(node.position);\r\n                                    node.parent.addChild(nodePrefab);\r\n\r\n                                    this.frameNodeArray.push(nodePrefab);\r\n                                    if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                        for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                            this.frameNodeArrayLength++;\r\n                                            this.frameNodeArray[i - 1].destroy();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                \r\n                            const rowStart = Math.floor(row / 3) * 3;\r\n                            const colStart = Math.floor(col / 3) * 3;\r\n                            for (let i = rowStart; i < rowStart + 3; i++) {\r\n                                for (let j = colStart; j < colStart + 3; j++) {\r\n                                    if (i !== row && j !== col) {\r\n                                        const node = this.gameView.BoardNode.getChildByName(`ValueGame${i*9 + j}`);\r\n                                        const nodePrefab = instantiate(this.frameNode);\r\n                                        nodePrefab.setPosition(node.position);\r\n                                        node.parent.addChild(nodePrefab);\r\n\r\n                                        this.frameNodeArray.push(nodePrefab);\r\n                                        if (this.frameNodeArray.length > this.frameNodeArrayLength + 20)  {\r\n                                            for (let i = this.frameNodeArray.length - 20; i < this.frameNodeArray.length; i++) {\r\n                                                this.frameNodeArrayLength++;\r\n                                                this.frameNodeArray[i - 1].destroy();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                });\r\n                \r\n            }\r\n            const nodeNum = new Node(\"NumberValueLabel\");\r\n            const labelValue = nodeNum.addComponent(Label);\r\n            labelValue.string = `  ${i + 1}  `;\r\n            labelValue.color = Color.BLACK;\r\n            labelValue.verticalAlign = VerticalTextAlignment.CENTER;\r\n            nodeNum.parent = this.node;\r\n            nodeNum.position = new Vec3(i % 3 * 70 + 210, Math.floor(i / 3) * -60, 0);\r\n            this.numberLabels.push(labelValue);\r\n            nodeNum.on(Node.EventType.TOUCH_END, () => {\r\n                if (this.selectedNode) {\r\n                    const selectedValue = parseInt(labelValue.string);\r\n                    if (!isNaN(selectedValue)) {\r\n                        this.gameView.SelectNode.play();\r\n                        const i = Math.floor(this.selectedNode.position.x / 55);\r\n                        const j = Math.floor(this.selectedNode.position.y / 55);\r\n                        const position = i * 9 + j;\r\n                        const solutionValue = this.solutionGame[position];\r\n                        const isCorrect = selectedValue === solutionValue;\r\n                        console.log(isCorrect);\r\n                    \r\n                        const labelBlockSelect = this.selectedNode.getComponent(Label);\r\n\r\n                        console.log(nodeCheck[i][j].filled);\r\n                        if (!nodeCheck[i][j].filled) {\r\n                            if (isCorrect == true) {\r\n                                labelBlockSelect.color = Color.BLUE;\r\n                                emtyNode--;\r\n                                nodeCheck[i][j].filled = true;\r\n                                console.log(emtyNode);\r\n                            \r\n                                if (emtyNode === 0){\r\n                                    this.unschedule(this.updateTimer);\r\n                                    this.gameView.TimeFinish.string = \"Bạn đã hoàn thành trong màn chơi trong \" + this.timeElapsed.toString() + \" giây\";\r\n                                    this.gameView.AudioBg.pause();\r\n                                    this.gameView.WinAudio.play();\r\n                                    this.gameView.SelectNode.volume = 0;\r\n                                    // this.gameView.BgMain.getComponent(AudioSource).pause();      \r\n                                    if(this.difficultyLevel == 0.2){\r\n                                        this.timeBestArr.push(this.timeElapsed);\r\n                                        localStorage.setItem('bestTime', JSON.stringify(this.timeBestArr));\r\n                                    }\r\n                                    if(this.difficultyLevel == 0.5){\r\n                                        this.timeBestArr1.push(this.timeElapsed);\r\n                                        localStorage.setItem('bestTime1', JSON.stringify(this.timeBestArr1));\r\n                                    }   \r\n                                    if(this.difficultyLevel == 0.8){\r\n                                        this.timeBestArr2.push(this.timeElapsed);\r\n                                        localStorage.setItem('bestTime2', JSON.stringify(this.timeBestArr2));\r\n                                    }\r\n                                    this.gameView.WinGame.active = true;\r\n\r\n                                    this.gameClient.match\r\n                                    .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                    .then((data) => {})\r\n                                    .catch((error) => console.log(error));                   \r\n                                }         \r\n                            } \r\n                            else if (isCorrect == false) {\r\n                                console.log(emtyNode);\r\n                                labelBlockSelect.color = Color.RED;\r\n                                this.redNumber++;\r\n                                this.gameView.PlayerFault.string = `Lỗi: ${this.redNumber}/3`\r\n                                this.gameView.PlayerFault.node.active = true;\r\n                                if (this.redNumber == 4) {\r\n                                    this.gameView.BoardNode.active = false;\r\n                                    this.gameView.GameOver.active = true;\r\n                                    this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                    this.gameView.NewGameBtn.node.active = false;\r\n                                    this.unschedule(this.updateTimer);\r\n                                    this.gameView.AudioBg.pause();\r\n                                    this.gameView.LoseAudio.play();\r\n                                    this.gameView.SelectNode.volume = 0;\r\n                                    // this.gameView.BgMain.getComponent(AudioSource).pause();\r\n                                    \r\n                                    this.gameClient.match\r\n                                    .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                    .then((data) => {})\r\n                                    .catch((error) => console.log(error));\r\n                                }\r\n                                if(this.redNumber == 5){\r\n                                    this.redNumber--;\r\n                                    this.gameView.BoardNode.active = false;\r\n                                    this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                    this.gameView.NewGameBtn.node.active = false;\r\n                                    this.unschedule(this.updateTimer);\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (nodeCheck[i][j].filled && isCorrect == false) {\r\n                            console.log(isCorrect);\r\n                            nodeCheck[i][j].filled = false;\r\n                            emtyNode++;\r\n                            console.log(emtyNode);\r\n                            labelBlockSelect.color = Color.RED;\r\n                            this.redNumber++;\r\n                            this.gameView.PlayerFault.string = `Lỗi: ${this.redNumber}/3`\r\n                            this.gameView.PlayerFault.node.active = true;\r\n                            if (this.redNumber == 4) {\r\n                                this.gameView.GameOver.active = true;\r\n                                this.gameView.BoardNode.active = false;\r\n                                this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                this.gameView.LoseAudio.play();\r\n                                this.gameView.AudioBg.pause();\r\n                                this.gameView.SelectNode.volume = 0;\r\n\r\n                                this.unschedule(this.updateTimer);\r\n                                // this.gameView.BgMain.getComponent(AudioSource).pause();\r\n                                this.gameView.NewGameBtn.node.active = false;\r\n                                \r\n                                this.gameClient.match\r\n                                .completeMatch(this.matchId, { score:this.timeElapsed})\r\n                                .then((data) => {})\r\n                                .catch((error) => console.log(error));\r\n                            }\r\n                            if(this.redNumber == 5){\r\n                                this.redNumber--;\r\n                                this.gameView.BoardNode.active = false;\r\n                                this.gameView.PlayerFault.string = `Bạn đã sai quá 3 lần!`;\r\n                                this.gameView.NewGameBtn.node.active = false;\r\n                                this.unschedule(this.updateTimer);\r\n                            }\r\n                        }\r\n\r\n                        else if (nodeCheck[i][j].filled && isCorrect == true) {\r\n                            labelBlockSelect.color = Color.BLUE;\r\n                            nodeCheck[i][j].filled = true;\r\n                        }\r\n\r\n                        labelBlockSelect.string = selectedValue.toString();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }   \r\n\r\n    private btnMute(AudioMute: Button) {\r\n        this.gameView.AudioMute.node.active = false;\r\n        this.gameView.AudioUnmute.node.active = true;\r\n        this.gameView.AudioBg.volume = 0.7;\r\n        this.gameView.SelectNode.volume = 0.7;\r\n        this.gameView.WinAudio.volume = 0.7;\r\n        this.gameView.LoseAudio.volume = 0.7;\r\n        this.volumeSudokuArray.push(this.gameView.AudioBg.volume);\r\n        localStorage.setItem('volumeSudokuArray', JSON.stringify(this.volumeSudokuArray));\r\n    }\r\n\r\n    private btnUnmute(AudioMute: Button) {\r\n        this.gameView.AudioMute.node.active = true;\r\n        this.gameView.AudioUnmute.node.active = false;\r\n        this.gameView.AudioBg.volume = 0;\r\n        this.gameView.SelectNode.volume = 0;\r\n        this.gameView.WinAudio.volume = 0;\r\n        this.gameView.LoseAudio.volume = 0;\r\n        this.volumeSudokuArray.push(this.gameView.AudioBg.volume);\r\n        localStorage.setItem('volumeSudokuArray', JSON.stringify(this.volumeSudokuArray));\r\n    }\r\n}\r\n\r\n\r\nexport function runScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\nexport function loadScene(arg0: string) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n\r\n\r\n"]}