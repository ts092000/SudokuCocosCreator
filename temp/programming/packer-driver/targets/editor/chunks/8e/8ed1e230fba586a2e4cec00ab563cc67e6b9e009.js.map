{"version":3,"sources":["file:///D:/gameCocos/SudokuMain2/assets/Script/GameController.ts"],"names":["_decorator","Component","Node","VerticalTextAlignment","Label","SudokuCreator","ccclass","property","GameController","onLoad","createPuzzleBoard","update","deltaTime","sudokuCreator","childMatrixWidth","boardData","createSudoku","puzzleGame","puzzle","solution","console","log","boardSize","board","row","rowValues","slice","rowSprites","col","value","label","string","toString","fontSize","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","boardNode","addChild","node","setPosition","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,qB,OAAAA,qB;AAAuBC,MAAAA,K,OAAAA,K;;AAEpDC,MAAAA,a,sBAAAA,a;;;;;;;;;OADH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;gCAKjBQ,c,WADZF,OAAO,CAAC,gBAAD,C,UAEHC,QAAQ,CAACL,IAAD,C,2BAFb,MACaM,cADb,SACoCP,SADpC,CAC8C;AAAA;AAAA;;AAAA;AAAA;;AAI1CQ,QAAAA,MAAM,GAAG;AACL,eAAKC,iBAAL;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AACDF,QAAAA,iBAAiB,GAAE;AACf,cAAIG,aAAa,GAAG;AAAA;AAAA,8CAAkB;AAACC,YAAAA,gBAAgB,EAAE;AAAnB,WAAlB,CAApB;AACA,cAAIC,SAAS,GAAGF,aAAa,CAACG,YAAd,CAA2B,GAA3B,CAAhB;AACA,cAAIC,UAAU,GAAGF,SAAS,CAACG,MAA3B;AACA,cAAIC,QAAQ,GAAGJ,SAAS,CAACI,QAAzB;AAEAC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,gBAAMG,SAAS,GAAG,CAAlB;AACA,gBAAMC,KAAK,GAAG,EAAd;;AAEA,eAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGF,SAAxB,EAAmCE,GAAG,EAAtC,EAA0C;AACtC,kBAAMC,SAAS,GAAGR,UAAU,CAACS,KAAX,CAAiBF,GAAG,GAAGF,SAAvB,EAAkC,CAACE,GAAG,GAAG,CAAP,IAAYF,SAA9C,CAAlB;AACA,kBAAMK,UAAU,GAAG,EAAnB;;AACA,iBAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGN,SAAxB,EAAmCM,GAAG,EAAtC,EAA0C;AACtC,oBAAMC,KAAK,GAAGJ,SAAS,CAACG,GAAD,CAAvB;AACA,oBAAME,KAAK,GAAG,IAAI1B,KAAJ,EAAd;AACA0B,cAAAA,KAAK,CAACC,MAAN,GAAeF,KAAK,KAAK,CAAV,GAAc,GAAd,GAAoBA,KAAK,CAACG,QAAN,EAAnC;AACAF,cAAAA,KAAK,CAACG,QAAN,GAAiB,EAAjB;AACAH,cAAAA,KAAK,CAACI,eAAN,GAAwB9B,KAAK,CAAC+B,eAAN,CAAsBC,MAA9C;AACAN,cAAAA,KAAK,CAACO,aAAN,GAAsBlC,qBAAqB,CAACiC,MAA5C;AAEA,mBAAKE,SAAL,CAAeC,QAAf,CAAwBT,KAAK,CAACU,IAA9B;AACA,mBAAKF,SAAL,CAAeG,WAAf,CAA2Bb,GAAG,GAAG,EAAN,GAAW,EAAtC,EAA0CJ,GAAG,GAAG,EAAN,GAAW,EAArD;AACA,mBAAKgB,IAAL,CAAUD,QAAV,CAAmBT,KAAK,CAACU,IAAzB;AACAb,cAAAA,UAAU,CAACe,IAAX,CAAgBZ,KAAhB;AACH;;AACDP,YAAAA,KAAK,CAACmB,IAAN,CAAWf,UAAX;AACH;AAEJ;;AA1CyC,O","sourcesContent":["import { _decorator, Component, Node, VerticalTextAlignment, Label } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\n\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n    @property(Node)\r\n    boardNode: Node;\r\n\r\n    onLoad() {\r\n        this.createPuzzleBoard();\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n    createPuzzleBoard(){\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(0.2);\r\n        let puzzleGame = boardData.puzzle;\r\n        let solution = boardData.solution;\r\n\r\n        console.log(puzzleGame);\r\n        console.log(solution);\r\n\r\n        const boardSize = 9;\r\n        const board = [];\r\n\r\n        for (let row = 0; row < boardSize; row++) {\r\n            const rowValues = puzzleGame.slice(row * boardSize, (row + 1) * boardSize);\r\n            const rowSprites = [];\r\n            for (let col = 0; col < boardSize; col++) {\r\n                const value = rowValues[col];\r\n                const label = new Label();\r\n                label.string = value === 0 ? '-' : value.toString();\r\n                label.fontSize = 40;\r\n                label.horizontalAlign = Label.HorizontalAlign.CENTER;\r\n                label.verticalAlign = VerticalTextAlignment.CENTER;\r\n\r\n                this.boardNode.addChild(label.node);\r\n                this.boardNode.setPosition(col * 60 + 30, row * 60 + 30);\r\n                this.node.addChild(label.node);\r\n                rowSprites.push(label);\r\n            }\r\n            board.push(rowSprites);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}