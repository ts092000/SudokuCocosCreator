{"version":3,"sources":["file:///D:/gameCocos/SudokuMain2/assets/Script/GameController.ts"],"names":["_decorator","Component","Node","VerticalTextAlignment","Label","Vec3","SudokuCreator","ccclass","property","GameController","onLoad","createPuzzleBoard","ValueInput","i","node","label","addComponent","string","verticalAlign","CENTER","parent","position","Math","floor","numberLabels","push","on","EventType","TOUCH_END","console","log","sudokuCreator","childMatrixWidth","boardData","createSudoku","solution","puzzleGame","solutionGame","selectedValue","puzzle","length","j","value","setPosition","boardNode","addChild","labelBlock","toString"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,qB,OAAAA,qB;AAAuBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;AAE3DC,MAAAA,a,sBAAAA,a;;;;;;;;;OADH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;gCAIjBS,c,WADZF,OAAO,CAAC,gBAAD,C,UAEHC,QAAQ,CAACN,IAAD,C,UAERM,QAAQ,CAACJ,KAAD,C,2BAJb,MACaK,cADb,SACoCR,SADpC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAM1CS,QAAAA,MAAM,GAAG;AACL,eAAKC,iBAAL;AACA,eAAKC,UAAL;AACH;;AAEDA,QAAAA,UAAU,GAAG;AACT,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,kBAAMC,IAAI,GAAG,IAAIZ,IAAJ,CAAS,kBAAT,CAAb;AACA,kBAAMa,KAAK,GAAGD,IAAI,CAACE,YAAL,CAAkBZ,KAAlB,CAAd;AACAW,YAAAA,KAAK,CAACE,MAAN,GAAgB,GAAEJ,CAAC,GAAG,CAAE,EAAxB;AACAE,YAAAA,KAAK,CAACG,aAAN,GAAsBf,qBAAqB,CAACgB,MAA5C;AACAL,YAAAA,IAAI,CAACM,MAAL,GAAc,KAAKN,IAAnB;AACAA,YAAAA,IAAI,CAACO,QAAL,GAAgB,IAAIhB,IAAJ,CAASQ,CAAC,GAAG,CAAJ,GAAQ,GAAR,GAAc,GAAvB,EAA4BS,IAAI,CAACC,KAAL,CAAWV,CAAC,GAAG,CAAf,IAAoB,CAAC,GAAjD,EAAsD,CAAtD,CAAhB;AACA,iBAAKW,YAAL,CAAkBC,IAAlB,CAAuBV,KAAvB;AACAD,YAAAA,IAAI,CAACY,EAAL,CAAQxB,IAAI,CAACyB,SAAL,CAAeC,SAAvB,EAAkC,MAAM;AACpCC,cAAAA,OAAO,CAACC,GAAR,CAAa,SAAQf,KAAK,CAACE,MAAO,EAAlC;AACH,aAFD;AAGH;AACJ;;AAEDN,QAAAA,iBAAiB,GAAE;AACf,cAAIoB,aAAa,GAAG;AAAA;AAAA,8CAAkB;AAACC,YAAAA,gBAAgB,EAAE;AAAnB,WAAlB,CAApB;AACA,cAAIC,SAAS,GAAGF,aAAa,CAACG,YAAd,CAA2B,GAA3B,CAAhB;AACA,cAAIC,QAAQ,GAAGF,SAAS,CAACE,QAAzB;AACA,cAAIC,UAAoB,GAAG,EAA3B;AACA,cAAIC,YAAsB,GAAG,EAA7B;AACA,cAAIC,aAAa,GAAG,EAApB;;AAEA,eAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,SAAS,CAACM,MAAV,CAAiBC,MAArC,EAA6C3B,CAAC,EAA9C,EAAkD;AAC9CuB,YAAAA,UAAU,CAACX,IAAX,CAAgBQ,SAAS,CAACM,MAAV,CAAiB1B,CAAjB,IAAsB,CAAtC;AACH;;AACD,eAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,SAAS,CAACE,QAAV,CAAmBK,MAAvC,EAA+C3B,CAAC,EAAhD,EAAoD;AAChDwB,YAAAA,YAAY,CAACZ,IAAb,CAAkBQ,SAAS,CAACE,QAAV,CAAmBtB,CAAnB,IAAwB,CAA1C;AACH;;AAEDgB,UAAAA,OAAO,CAACC,GAAR,CAAYM,UAAZ;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;;AAEA,eAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,iBAAK,IAAI4B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,oBAAMC,KAAK,GAAGN,UAAU,CAACvB,CAAC,GAAC,CAAF,GAAM4B,CAAP,CAAxB;AACA,oBAAM3B,IAAI,GAAG,IAAIZ,IAAJ,CAAS,WAAT,CAAb;AACAY,cAAAA,IAAI,CAAC6B,WAAL,CAAiB9B,CAAC,GAAG,EAArB,EAAyB4B,CAAC,GAAG,EAA7B;AACA,mBAAKG,SAAL,CAAeC,QAAf,CAAwB/B,IAAxB;AAEA,oBAAMgC,UAAU,GAAGhC,IAAI,CAACE,YAAL,CAAkBZ,KAAlB,CAAnB;AACA0C,cAAAA,UAAU,CAAC7B,MAAX,GAAoByB,KAAK,KAAK,CAAV,GAAc,GAAd,GAAoBA,KAAK,CAACK,QAAN,EAAxC;AAEAjC,cAAAA,IAAI,CAACY,EAAL,CAAQxB,IAAI,CAACyB,SAAL,CAAeC,SAAvB,EAAkC,MAAM;AACpC,oBAAIc,KAAK,KAAK,CAAd,EAAiB;AAAE;AACjB,sBAAIJ,aAAa,KAAK,EAAtB,EAA0B;AAAE;AAC1BQ,oBAAAA,UAAU,CAAC7B,MAAX,GAAoBqB,aAApB,CADwB,CACW;AACpC;AACF,iBAJD,MAIO;AACLA,kBAAAA,aAAa,GAAGQ,UAAU,CAAC7B,MAA3B,CADK,CAC8B;AACpC;AACF,eARH;AASH;AACJ;AAEJ;;AAlEyC,O;;;;;;;;;;iBAIlB,E","sourcesContent":["import { _decorator, Component, Node, VerticalTextAlignment, Label, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { SudokuCreator } from '@algorithm.ts/sudoku';\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n    @property(Node)\r\n    boardNode: Node;\r\n    @property(Label)\r\n    numberLabels: Label[] = [];\r\n\r\n    onLoad() {\r\n        this.createPuzzleBoard();\r\n        this.ValueInput();\r\n    }\r\n\r\n    ValueInput() {\r\n        for (let i = 0; i < 9; i++) {\r\n            const node = new Node(\"NumberValueLabel\");\r\n            const label = node.addComponent(Label);\r\n            label.string = `${i + 1}`;\r\n            label.verticalAlign = VerticalTextAlignment.CENTER;\r\n            node.parent = this.node;\r\n            node.position = new Vec3(i % 3 * 100 + 180, Math.floor(i / 3) * -110, 0);\r\n            this.numberLabels.push(label);\r\n            node.on(Node.EventType.TOUCH_END, () => {\r\n                console.log(`Value ${label.string}`);\r\n            });\r\n        }\r\n    }\r\n\r\n    createPuzzleBoard(){\r\n        let sudokuCreator = new SudokuCreator({childMatrixWidth: 3});\r\n        let boardData = sudokuCreator.createSudoku(0.2);\r\n        let solution = boardData.solution;\r\n        let puzzleGame: number[] = [];\r\n        let solutionGame: number[] = [];\r\n        let selectedValue = \"\";\r\n\r\n        for (let i = 0; i < boardData.puzzle.length; i++) {\r\n            puzzleGame.push(boardData.puzzle[i] + 1);\r\n        }\r\n        for (let i = 0; i < boardData.solution.length; i++) {\r\n            solutionGame.push(boardData.solution[i] + 1);\r\n        }\r\n\r\n        console.log(puzzleGame);\r\n        console.log(solutionGame);\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            for (let j = 0; j < 9; j++) {\r\n                const value = puzzleGame[i*9 + j];\r\n                const node = new Node(\"ValueGame\");\r\n                node.setPosition(i * 55, j * 55);\r\n                this.boardNode.addChild(node);\r\n                \r\n                const labelBlock = node.addComponent(Label);\r\n                labelBlock.string = value === 0 ? \"-\" : value.toString();\r\n\r\n                node.on(Node.EventType.TOUCH_END, () => {\r\n                    if (value === 0) { // Nếu ô trống\r\n                      if (selectedValue !== \"\") { // Nếu đã chọn giá trị\r\n                        labelBlock.string = selectedValue; // Gán giá trị vào ô trống\r\n                      }\r\n                    } else {\r\n                      selectedValue = labelBlock.string; // Lưu giá trị của ô được chọn\r\n                    }\r\n                  });\r\n            }\r\n        }\r\n\r\n    }   \r\n}\r\n\r\n"]}